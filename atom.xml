<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小客栈</title>
  
  <subtitle>前端复习总结</subtitle>
  <link href="https://couriourc.github.io/atom.xml" rel="self"/>
  
  <link href="https://couriourc.github.io/"/>
  <updated>2023-03-18T05:14:42.268Z</updated>
  <id>https://couriourc.github.io/</id>
  
  <author>
    <name>CouriourC</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTML 基础篇</title>
    <link href="https://couriourc.github.io/posts/81edab1.html"/>
    <id>https://couriourc.github.io/posts/81edab1.html</id>
    <published>2023-03-18T05:14:42.268Z</published>
    <updated>2023-03-18T05:14:42.268Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="html-基础总结"><a class="markdownIt-Anchor" href="#html-基础总结"></a> HTML 基础总结</h1><h2 id="seo-相关内容"><a class="markdownIt-Anchor" href="#seo-相关内容"></a> SEO 相关内容</h2><p>所谓 SEO ，就是搜索引擎索引优化，让搜索引擎更容易定位到网站内容，然而对于一个网站，最重要的便是 HTML，提供完整的内容是 web 出现的首要原因，一个好的网站不应该脱离内容，功能主体。</p><h3 id="1-html-语义化的理解"><a class="markdownIt-Anchor" href="#1-html-语义化的理解"></a> 1. HTML 语义化的理解</h3><p>Web 语义化是指使用恰当语义的 <code>html</code> 标签、<code>class</code> 类名等内容，让页面具有良好的结构与含义，从而让人和机器都能快速理解网页内容。语义化的 <code>web</code> 页面一方面可以让机器在更少的人类干预情况下收集并研究网页的信息，从而可以读懂网页的内容，然后将收集汇总的信息进行分析，结果为人类所用；另一方面它可以让开发人员读懂结构和用户以及屏幕阅读器（如果访客有视障）能够读懂内容。</p><p>简而言之，一种 <code>Web </code>开发规范，规范的作用就有：</p><ol><li>更好的维护项目，提高代码可读性。</li><li>机器更容易理解内容，那么对于 <code>SEO</code>,<code>Aria </code>都有帮助，同时有利于编译器进行一系列优化。</li></ol><h3 id="2-h1-标签和-title-标签之间的区别是什么"><a class="markdownIt-Anchor" href="#2-h1-标签和-title-标签之间的区别是什么"></a> 2. h1 标签和 title 标签之间的区别是什么？</h3><ul><li><code>h1</code> 标签：写在文章正文的标题部分，参与文章的内容部分，对于一个页面最好只有一个主题，更好彰显主题。</li><li><code>title</code> 标签：写在网页的 <code>head</code> 部分，不参与文章的内容，是展示给搜索引擎的，对于 <code>SEO</code> 而言其权重无疑是最大的，其次，会作为浏览器标签卡，并会保留在历史记录中。</li></ul><h3 id="3-img-中的-title-属性和-alt-属性的区别"><a class="markdownIt-Anchor" href="#3-img-中的-title-属性和-alt-属性的区别"></a> 3. &lt;img /&gt; 中的 title 属性和 alt 属性的区别</h3><p><code>alt</code> 属性是在图片无法加载的时候才会显示的代替文本，对于 <code>alt</code> 的作用是易用性的一个重要信息，屏幕阅读器会提示出来，而 <code>title</code> 是关于元素的注释信息，主要是给用户解读，当鼠标放到文字或是图片上时有 <code>title</code> 文字显示。这两者的区别就类似于我们所说的 <code>em</code> 和 <code>strong</code> 的区别</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;html-</summary>
      
    
    
    
    <category term="2023面试" scheme="https://couriourc.github.io/categories/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="HTML" scheme="https://couriourc.github.io/categories/2023%E9%9D%A2%E8%AF%95/HTML/"/>
    
    <category term="html" scheme="https://couriourc.github.io/categories/2023%E9%9D%A2%E8%AF%95/HTML/html/"/>
    
    
    <category term="HTML" scheme="https://couriourc.github.io/tags/HTML/"/>
    
    <category term="2023面试" scheme="https://couriourc.github.io/tags/2023%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>HTML 基础篇</title>
    <link href="https://couriourc.github.io/posts/81edab1.html"/>
    <id>https://couriourc.github.io/posts/81edab1.html</id>
    <published>2023-03-18T03:36:27.731Z</published>
    <updated>2023-03-18T05:10:30.577Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="html-基础总结"><a class="markdownIt-Anchor" href="#html-基础总结"></a> HTML 基础总结</h1><h2 id="seo-相关内容"><a class="markdownIt-Anchor" href="#seo-相关内容"></a> SEO 相关内容</h2><p>所谓 SEO ，就是搜索引擎索引优化，让搜索引擎更容易定位到网站内容，然而对于一个网站，最重要的便是 HTML，提供完整的内容是 web 出现的首要原因，一个好的网站不应该脱离内容，功能主体。</p><h3 id="1-html-语义化的理解"><a class="markdownIt-Anchor" href="#1-html-语义化的理解"></a> 1. HTML 语义化的理解</h3><p>Web 语义化是指使用恰当语义的 <code>html</code> 标签、<code>class</code> 类名等内容，让页面具有良好的结构与含义，从而让人和机器都能快速理解网页内容。语义化的 <code>web</code> 页面一方面可以让机器在更少的人类干预情况下收集并研究网页的信息，从而可以读懂网页的内容，然后将收集汇总的信息进行分析，结果为人类所用；另一方面它可以让开发人员读懂结构和用户以及屏幕阅读器（如果访客有视障）能够读懂内容。</p><p>简而言之，一种 <code>Web </code>开发规范，规范的作用就有：</p><ol><li>更好的维护项目，提高代码可读性。</li><li>机器更容易理解内容，那么对于 <code>SEO</code>,<code>Aria </code>都有帮助，同时有利于编译器进行一系列优化。</li></ol><h3 id="2-h1-标签和-title-标签之间的区别是什么"><a class="markdownIt-Anchor" href="#2-h1-标签和-title-标签之间的区别是什么"></a> 2. h1 标签和 title 标签之间的区别是什么？</h3><ul><li><code>h1</code> 标签：写在文章正文的标题部分，参与文章的内容部分，对于一个页面最好只有一个主题，更好彰显主题。</li><li><code>title</code> 标签：写在网页的 <code>head</code> 部分，不参与文章的内容，是展示给搜索引擎的，对于 <code>SEO</code> 而言其权重无疑是最大的，其次，会作为浏览器标签卡，并会保留在历史记录中。</li></ul><h3 id="3-img-中的-title-属性和-alt-属性的区别"><a class="markdownIt-Anchor" href="#3-img-中的-title-属性和-alt-属性的区别"></a> 3. &lt;img /&gt; 中的 title 属性和 alt 属性的区别</h3><p><code>alt</code> 属性是在图片无法加载的时候才会显示的代替文本，对于 <code>alt</code> 的作用是易用性的一个重要信息，屏幕阅读器会提示出来，而 <code>title</code> 是关于元素的注释信息，主要是给用户解读，当鼠标放到文字或是图片上时有 <code>title</code> 文字显示。这两者的区别就类似于我们所说的 <code>em</code> 和 <code>strong</code> 的区别</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;html-</summary>
      
    
    
    
    <category term="2023面试" scheme="https://couriourc.github.io/categories/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="HTML" scheme="https://couriourc.github.io/categories/2023%E9%9D%A2%E8%AF%95/HTML/"/>
    
    <category term="前端开发" scheme="https://couriourc.github.io/categories/2023%E9%9D%A2%E8%AF%95/HTML/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="HTML" scheme="https://couriourc.github.io/tags/HTML/"/>
    
    <category term="2023面试" scheme="https://couriourc.github.io/tags/2023%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2022 年度回顾</title>
    <link href="https://couriourc.github.io/posts/2MEJM9V.html"/>
    <id>https://couriourc.github.io/posts/2MEJM9V.html</id>
    <published>2023-03-02T04:55:55.000Z</published>
    <updated>2023-03-11T07:54:57.434Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="2022-回顾"><a class="markdownIt-Anchor" href="#2022-回顾"></a> 2022 回顾</h1><p><code>2022 </code>对我来说，是一个忙碌的一年，也是特别有纪念意义的一年。</p><p>这一年，我面过字节，拿到过百词斩实习 Offer、半个腾讯实习的 Offer 、哈啰出行的实习 Offer，最后奔赴求学之路 —— 考研。</p><p>这一年，我经历了半年的规律作息，经历了下降三十斤的体重变化，也爱上了跑步、运动。</p><p>这一年，从预备党员成为了一名光荣的共产党员。</p><p>这一年，有一起逛街的饭搭子，有相约共同旅游的好朋友，有相约赏遍桂林山水，走遍中西南北的妹，有一起跑步的哥们，有靠谱的老姐……</p><p>因此，还是为自己做一个大总结吧～</p><hr><p>人生处处是选择，不管结果如何，总会充满惊喜。</p><p>自一月份就开始做选择，在电话中进行了腾讯 IEG 蓝鲸智云校企合作项目组的简短面试，于此同时，也在进行成都超有爱科技有限公司 (百词斩) 的面试，最终都双双通过，然后就在二者之间选择，百词斩是春季实习，没有转正机会，需要自带电脑，不过薪资还可以，压力给到 蓝鲸 这边，因为只是校企合作项目，所以肯定和实习是不一样的，不过最后结果还是选择了蓝鲸这边，拒了百词斩，讲道理，在起初我最心仪的其实是百词斩。</p><p>在蓝鲸这边，我结识了 凯神，宸哥，边成 以及很多优秀的人，他们给了我一开始想要得到的东西 —— 宝贵经历，其中成哥 (边成) 基本就是线上老基友了，考研的时候相互鼓励，当然这也是后话了。在这次项目中，磕磕拌拌的，从第一次评审 “挨骂”，然后发现原型图或者说从开始的需求分析都不对，然后需要整改重做，到开始找凯神，宸哥讨论新的设计，最后从新的设计上手，到进行代码实现，居然只用了一周，期间还经历与 O 神以及诸多大佬交流，学习了很多东西，并对这个项目重新进行需求分析，概念模型建立，到编码阶段一整套流程，虽然还是有挺多细节和 BUG 没有解决的，不过 UI ，功能已经实现的十分齐全了，可以说从这一次开始，我做项目不再是单纯的写代码，而是开始思考，而是从一个用户的角度去思考问题了，操作细节上的设计。</p><p>时至三四月，春季实习开放，腾讯 IEG 这边也开了 <code>HC</code>，我自然也是投了简历，经历基本的面试之后，然后到了 Offer 报批环节，也基本分配了 Leader 。很遗憾 —— 疫情来了，当时的腾讯甚至在裁人了，自然不可能再招新人了，刚开始得知这个消息的时候，心中还是难免有些失落的，不过很快就调整了心态，转向更多的提升自己了，毕竟在我还需要深入学习，进一步开拓自己的视野。于是我开始泡图书馆，读《操作系统》，读《领域驱动设计》，读 《软件工程》等基础知识，边做边总结，越是遨游在书籍中，越是发现自己如同井底之蛙！</p><p>已经步入五月，毕业危机到来，于是我开始萌生了考研的想法，和成哥一合计，交流，发现他也在计划考研，优秀的人都这么卷么🤡。</p><p>由于专业的课程设计，我投入到电子材料的课程设计中去，完成一系列综合实验，根据材料性质，设计建议面包板，再手抄了一堆报告。在抄报告的时候顺便研究了一下院校选择，也看了很多帖子，收集了很多资料。</p><p>上半年尾声想起，六月结束，我的下半年围绕着考研开始了……</p><p>进入七月份开始我的考研计划，原本打算考西南石油大学，最后发现性价比不行，评级还不如本校，不过专业课考操作系统和数据结构，因此就没太在意，保持着复习，高数武中祥，英语《考研真相》，刷单词，每天早上六点半起，打一套《八部金刚功》，吃一份麦片泡牛奶，进入复习，然年后中午干饭，下午继续，然后晚上八点结束学习，绕着学校跑步，日复一日，坚持了三个月～，瘦了二十斤，别的不说，满嘴顺口溜。</p><p>之后图书馆闭馆，就转移战场，来到实验室复习。</p><p>然后发现一搬资料，我去，咋这么多，什么汤家凤 1000 基础题，什么 660、330、考研真相豪华版（2001-2023）、王道考研系列，腿姐手册（虽然这玩意我到考研结束，连第一章都没翻完）。搬过来之后，就懒得又搬来搬去，等于说，我这个老油条，又在实验室呆了几个月到考研。</p><p>实验室真是一个好地方，大家都在这努力追赶，很忙，很充实！在实验室复习阶段，每天还是保持着规律作息，行色匆匆，肉眼可见的时间飞逝。</p><p>🎭（直接猛喷 - 龙哥，星宇，祖姐，皮总，一堆堆 - 这堆学弟学妹 - 虽然我都是称他们为哥啊姐啊，不过都是顺口，各个卷的一逼，通宵啥的是一点不含糊），不过考研的时候，也是实验室各位给了我很多的鼓励，虽然我自认为自己还是比较不以物喜，不以己悲的。</p><p>要解决的是问题，而不是产生问题。</p><p>但难免进入 emo 期，我印象中最深刻的便是 —— 英语，那种无力感，明明单词语句都看得懂，却理解不了文章，做不对题，每天一篇阅读理解，做到了 2013 年，也就是说，大概有 40 几天，始终保持着稳定的错误率，我意识到，我在白努力！并不是我没有耐心，而是若一件事一直停滞不前，说明我的方向压根就是错的，我开始慌了，做梦都在思考如何怎样才是正确的英语打开技巧，找朋友们倾诉，找好基友吐槽，吐槽英语的没人性，为什么技术文档看得贼溜，结果一篇英语阅读直接给我干蒙了，压得我几乎喘不过气。最后是代姐（之前参加 “互联网 +” 的一个小姐姐，来自外国语学院英语专业）给了我一些启发，或许我根本没有看懂文章，可以尝试去看一下赵楠楠的阅读方法论以及一个同班的一个英语大佬 —— 陈舒月交流，给了我一个记单词的方法，以及每次做完一篇文章之后，读一下，写，看，在他们的启发下，我进入闭关期，我意识到：单词在于重复，反复的看，消化文章，也是如此。我重新制定了我的英语学习计划，并且专门一周时间只做英语，具体计划如下:</p><ol><li>早上起床，一两个小时疯狂刷单词，而不是写在本子上，而是进行单词淘汰，具体来说，就是每次把自己十分熟悉的单词移除。</li><li>把之前的阅读重新做，对照着赵楠楠的阅读讲解</li><li>下午继续刷单词</li><li>继续做阅读</li><li>每晚一篇外刊阅读</li></ol><p>每天基本上要过完六七百个单词，然后再次淘汰重背，后面我发现我连单词出现的顺序都记住了，于是我切换软件，改用其他单词软件，一路从词根单词，到不背单词，到墨墨背单词，到欧路词典……，英语阅读也是重新做了个遍，不过很遗憾，进步不大！但！，有进步，说明我方法对了，于是我更加努力，我意识到，赵楠楠的方法不适合我，于是我开始寻找其他老师的阅读方法，期间看过唐迟，邪冰冰（确实邪教做法），在归纳总结了市面上知名教师的阅读方法论，我有了自己的做题理论：</p><ol><li>赵楠楠的方法重单词，读文章和通过问题来推测文章结构和内容。</li><li>唐迟的方法重同义替换，读文章和通过问题以及问题选项来推测答案。</li><li>邪教做法则是利用答案只有一个来对比选项，从而推出最大概率的选项，这个需要对题型有准确的判断。</li></ol><p>我则是去百家之长，利用选项来分析结构，然后直接读文章，而不是邪教读五项，利用同义替换，读问题，标记问题类型，看缺什么，然后直接进入到读文章，因为之前赵楠楠的方法影响，我读文章能够很快推出大意，从而定位，推测这句话是否为烟雾弹，然后直接排除选项，剩余选项再进行对比，然后直接段落定位，简单来说就是这样，最终英二收获 <code>75 </code>分 ，已经算是我比较满意的一个结果了，而且还习惯了阅读英语文章。</p><p>随着英语的复习推进，发现时间已经来到了，十月了，时值金秋，穿插了之前海投的时候，投到了哈啰出行，然后进行了两轮面试，意外的过了，但是我当时已经想考完研，于是推脱到十二月份过去，计划考完研再过去赚点外快啥的，之后就和 HR 博弈，最终以太长时间到岗，Hold 住，因为面试的时候给终面面试官留下了比较好的印象，之后就给我转成了校招岗，重新进入面试环节，然后一面给我挂了，还真是抽象🤡~~~~。又进入懵逼期间，倒不是因为反复起起落落，而是我发现政治内容咋这么夸张，三本书，救命！没有其他办法就拿着背吧，然后发现我背我的，他考他的，是真的完全做不明白，就把政治纳入学习环节，重新调整计划，背书，刷肖四肖八，最后政治分数也还比较可观 ——61。</p><p>莫名其妙就进入考研攻坚期，但是我心态意外的好，没有那种面临考试的紧张感，而是一种充实感（虽然脂肪不再那么充实了）。在真正考场的时候，我总是第一个进入考场，搞得监考老师都记住我了🤡（纯粹是提前半个小时做好准备的习惯罢了）。</p><p>攻坚期，好消息是不封校了，坏消息是肺炎还在，虽然已经算作是小感冒了，我也已经做好了当小阳人的准备了，最后没想到，只发烧了了半天，然后第二天就奇迹般恢复了，并且记忆能力还加强了👴，一口气上五层楼，喔，不对，一口气背完了肖四，意外的因祸得福？</p><p>在考研期间，就一直和一个哥们 (熊) 每天出去到点跑步，后面 爬哥 也加入进来，我们到点散步，讨论学习进度，周末分享我的思维导图（我比较喜欢画这些玩意，对我而言，这算是我特别重要的工具了）。不过也有麻烦点，熊居然碎觉晚上打呼噜😨，我是真的见识到了，在考试前两天，因为考场就在楼下，计划直接在实验室睡，没想到居然封教学楼，无奈就得回寝室，但是室友阳了（讲道理，说不定是我传的），然后我就计划出去住，然后和那哥们一拍即和，拍的多高兴，我就有多后悔，半夜以为世界末日了🤡，于是我毅然决然，回寝室休息😏。</p><p>综合当时考试的情况来看，我已经对我的数学考差有了预感，四门考试，除了数学，均提前一个小时做完，提前半个小时交卷。但是数学给我的感觉不在于它很难，而在于它很难算，做着一度很卡壳，虽然给了我很大打击，不过这为我之后的学习方法进行了警告（虽然考试结束了，学习并没有结束）。</p><p>。。。有点偏题了，回归正文，不过也快结束了。</p><p>中间还有很多小插曲，之后再补充吧，总结这东西，总是需要一大段时间来回顾，生活很美好，只言片语，道不明白。</p><p>考完研已经是 22 日了，电话消息不断，有约饭，恰饭，逛街，有来自老爸老妈的亲切问候。</p><p>元旦的钟声敲响，时光老头还真挺能跑的，一眨眼，又得去追他了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;2022-</summary>
      
    
    
    
    <category term="2022" scheme="https://couriourc.github.io/categories/2022/"/>
    
    <category term="年度总结" scheme="https://couriourc.github.io/categories/2022/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="2022" scheme="https://couriourc.github.io/tags/2022/"/>
    
    <category term="年度回顾" scheme="https://couriourc.github.io/tags/%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BE/"/>
    
  </entry>
  
  <entry>
    <title>成都量子矩阵前端实习面试经历</title>
    <link href="https://couriourc.github.io/posts/1HA3ZR3.html"/>
    <id>https://couriourc.github.io/posts/1HA3ZR3.html</id>
    <published>2023-02-24T04:55:55.000Z</published>
    <updated>2023-03-18T05:14:42.269Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="成都量子矩阵前端实习面试经历"><a class="markdownIt-Anchor" href="#成都量子矩阵前端实习面试经历"></a> 成都量子矩阵前端实习面试经历</h1><p>原本有两面的，终面和线上面，后面貌似说，直接免掉了终面，让我入职了，面试时长大概是二十分钟</p><h2 id="简短的自我介绍"><a class="markdownIt-Anchor" href="#简短的自我介绍"></a> 简短的自我介绍</h2><h3 id="vue2-和-vue3-的区别点"><a class="markdownIt-Anchor" href="#vue2-和-vue3-的区别点"></a> Vue2 和 Vue3 的区别点</h3><p>监听方式</p><h4 id="vue3"><a class="markdownIt-Anchor" href="#vue3"></a> Vue3</h4><p>watchEffect 和 watch 的区别</p><h3 id="计网"><a class="markdownIt-Anchor" href="#计网"></a> 计网</h3><p>HTTP 常见状态码</p><p>HTTP 的发展历程（以为之前微派一面的影响，所以对 HTTP 每一段发生了什么，以及为什么要这么去做，之前都整理了一遍，所以思路比较清晰）</p><h3 id="算法题"><a class="markdownIt-Anchor" href="#算法题"></a> 算法题</h3><p>题目，生成随机颜色 Hex #ffffffff</p><p>讲道理，确实忘记了规则，后面才想起来，分三组，然后前一位表示颜色的亮度，16 进制，这玩意，调 API 随机生成就想，起初我以为还是，生成随机码之后，写个洗牌算法呢，正打算洗牌的 N 种做法呢。</p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>因为没什么太多有意思的提问，就没记录太多，不过总结而言，还是需要把基础打好，然后由于这边愿意让我复试之后可以继续实习，然后想的就是反正之后除了毕设和复试，而且对于暑假刚好可以去实习的时候观望一下新的前沿技术，毕竟公司做的是数字孪生 AI 这一块，之前就听到过一些概念，就入职了</p><h2 id="入职体验"><a class="markdownIt-Anchor" href="#入职体验"></a> 入职体验</h2><p>还挺年轻化的，挺有意思的一个团队，很有活力，上下班时间也比较合理，整体来说差强人意。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;成都量子矩</summary>
      
    
    
    
    <category term="面试经历" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
    <category term="2023面试" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="interview" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/interview/"/>
    
    
    <category term="2023面试" scheme="https://couriourc.github.io/tags/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="面试经历" scheme="https://couriourc.github.io/tags/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>成都量子矩阵前端实习面试经历</title>
    <link href="https://couriourc.github.io/posts/1HA3ZR3.html"/>
    <id>https://couriourc.github.io/posts/1HA3ZR3.html</id>
    <published>2023-02-24T04:55:55.000Z</published>
    <updated>2023-03-18T05:10:30.652Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="成都量子矩阵前端实习面试经历"><a class="markdownIt-Anchor" href="#成都量子矩阵前端实习面试经历"></a> 成都量子矩阵前端实习面试经历</h1><p>原本有两面的，终面和线上面，后面貌似说，直接免掉了终面，让我入职了，面试时长大概是二十分钟</p><h2 id="简短的自我介绍"><a class="markdownIt-Anchor" href="#简短的自我介绍"></a> 简短的自我介绍</h2><h3 id="vue2-和-vue3-的区别点"><a class="markdownIt-Anchor" href="#vue2-和-vue3-的区别点"></a> Vue2 和 Vue3 的区别点</h3><p>监听方式</p><h4 id="vue3"><a class="markdownIt-Anchor" href="#vue3"></a> Vue3</h4><p>watchEffect 和 watch 的区别</p><h3 id="计网"><a class="markdownIt-Anchor" href="#计网"></a> 计网</h3><p>HTTP 常见状态码</p><p>HTTP 的发展历程（以为之前微派一面的影响，所以对 HTTP 每一段发生了什么，以及为什么要这么去做，之前都整理了一遍，所以思路比较清晰）</p><h3 id="算法题"><a class="markdownIt-Anchor" href="#算法题"></a> 算法题</h3><p>题目，生成随机颜色 Hex #ffffffff</p><p>讲道理，确实忘记了规则，后面才想起来，分三组，然后前一位表示颜色的亮度，16 进制，这玩意，调 API 随机生成就想，起初我以为还是，生成随机码之后，写个洗牌算法呢，正打算洗牌的 N 种做法呢。</p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>因为没什么太多有意思的提问，就没记录太多，不过总结而言，还是需要把基础打好，然后由于这边愿意让我复试之后可以继续实习，然后想的就是反正之后除了毕设和复试，而且对于暑假刚好可以去实习的时候观望一下新的前沿技术，毕竟公司做的是数字孪生 AI 这一块，之前就听到过一些概念，就入职了</p><h2 id="入职体验"><a class="markdownIt-Anchor" href="#入职体验"></a> 入职体验</h2><p>还挺年轻化的，挺有意思的一个团队，很有活力，上下班时间也比较合理，整体来说差强人意。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;成都量子矩</summary>
      
    
    
    
    <category term="面试经历" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
    <category term="2023面试" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="面经" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="2023面试" scheme="https://couriourc.github.io/tags/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="面试经历" scheme="https://couriourc.github.io/tags/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>微派前端面试经历</title>
    <link href="https://couriourc.github.io/posts/3H28QX.html"/>
    <id>https://couriourc.github.io/posts/3H28QX.html</id>
    <published>2023-02-23T04:55:55.000Z</published>
    <updated>2023-03-18T05:14:42.269Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="微派前端面试经历"><a class="markdownIt-Anchor" href="#微派前端面试经历"></a> 微派前端面试经历</h1><blockquote><p>趁着考研初试成绩出来之前，投了很多家的春招招聘，面了一些，也拒了一些。之前都没有什么面试因为面试给我带来太多的帮助，或氛围不行，或白菜价格，而此次面试得到了很多很不一样的思考方式和提升，特此记录</p></blockquote><h2 id="一面"><a class="markdownIt-Anchor" href="#一面"></a> 一面</h2><blockquote><p>因为本来就有做任何事都提前半小时做好准备的习惯，这次也不例外，所以就提前半个小时进入了面试会议，虽然额外又多等了十五分钟，不过影响不是特别大。</p></blockquote><h3 id="自我介绍"><a class="markdownIt-Anchor" href="#自我介绍"></a> 自我介绍</h3><blockquote><p>之前一直没有一个完整体系的自我介绍，所以这次自我介绍也是说的不是很好，这两天准备给导师发简历，所以就多做了一些功课，就顺手在此处记录一下，虽然不是面试时候说出来的:</p><p>当然不是为了说走后门啥的，我只是想做研究，对于区块链十分感兴趣，恰好看到一位老师在做这一块，也十分感兴趣，但是考虑到如此火爆，再加上我只是一个材料学子，大佬看不上，所以就毛遂自荐，希望能有一席之地，就算复试出了幺蛾子，也能有继续交流的机会，就已经很满足了，毕竟对我而言，周边环境只是辅助作用，自我驱动才是我的动力源泉。</p><p>之所以对区块链的 idea ，如此感兴趣，当初也是受《黑客与画家》的影响，而之前在了解到区块链之前，我也有区块链的基本想法，然后碰到之后就自然而然就像是伯乐之音一般，我的蓝图，便是能参与其中并落地实践。</p><p>嗯，之所以在面经的时候讲一下我的学习方法，纯粹只是突然想到，然后估摸着可能对实验室的学弟学妹们有点用，故此分享。</p></blockquote><p>面试官您好，我叫陈润，现在将要面试的是微派 23 届校招，本科期间，我主修材料科学工程学院电子元器件方向，初入大一任职班长，荣获院级优秀班干部、优秀共青团，我严于律己热爱学习，荣获西华大学高等数学竞赛一等奖，成为一名光荣的共产党员。</p><p>严于律己是性格，兴趣是我的灵魂。</p><p>我热爱计算机技术，以梦为马，当以浆行舟。为具备相应的能力，我去图书馆借阅书籍；到计算机学院课程上旁听；在慕课进行学习。有计划，有目标的提升自己的能力，得益于此，在大一下时，通过层层面试选拔，我加入到计算机学院本科实验室（微力创新互动科技实验室，该实验室自主研发了 “西瓜课表” 等多项项目提供全校师生使用）。</p><p>实验室中，我主攻 Web 应用开发方向，学习基础知识，积极与学长老师交流，弥补不足。学长毕业后，我很荣幸得到实验室老师以及成员们的认可，成为实验室管理员之一，组织每周组会、协助新成员研发学习，实验室在 AI、Web、Unity  方向均斩获诸多奖项，本人也积极参与 “互联网 +”，“计算机能力挑战赛”，“蓝桥杯” 等竞赛并获多项奖项。</p><p>毫无疑问，实验室为我综合能力上带来质的飞跃，于是我在大二下的暑假获得了第一份实习 offer，后因疫情原因提前结束，又入实验室师兄创业团队进行研发，入冬寒假，接到腾讯 IEG 蓝鲸智云校企项目合作开发邀请，参与开源奖项管理系统的开发，并以极高评价结题。</p><p>实际面试和上面有些许出入，面试基本挑的是关于我的学习方式，以及实习经历用到的技术栈和解决的问题来介绍我自己。</p><h3 id="正文"><a class="markdownIt-Anchor" href="#正文"></a> 正文</h3><ul><li><p>面试官：看你简历上写做个小程序的优化，可以讲讲小程序的优化么？</p></li><li><p>我：在该小程序中，我分为了两个优化点。分为延时加载，和差异比对，减少 <code>setData</code> 的批量使用，以及对于虚拟列表的优化实现，首先对于第一个，因为实时效果要求比较严格，而频繁的轮询会导致反复的数据赋值（算是我自己开发时候的疏漏吧）。然后是厂列表，分了两个部分角度优化，分批次 <code>setData</code>, 以及虚拟滚动（这个是之后开发时候的想到的，虽然没有实际用上去）。</p></li><li><p>面试官：差异比对，给你一个复杂对象，怎么去做呢。</p></li><li><p>我：Diff 算法的话太奢侈了，我可能会选择给他转成 JSON，比对一下就是，或者找一个 NodeID , 这种给他绑定，而不是每一个都判断</p><blockquote><p>当时讲的时候，没有现在这么讲的简洁了，不过差不多想要表达这个涵义。</p></blockquote></li><li><p>面试官：你在 xxx 系统写做到了权限控制，你可以讲讲你的思路么？</p></li><li><p>我：在当初我们后端并没有写完整的某个用户能看到什么的权限表，我只有一个用户的身份信息，只知道这是不同权限的人登录，并不知道这个人具体有什么权限，我参照之前实习的时候的一个解决方案，自己维护了一张权限表在本地，然后用 <code>v-if</code> 这些指令结合 <code>vuex</code>,<code>getter</code>, 并将 <code>getter</code> 封装成函数，然后呢，再做校验（这样做其实问题很大，逻辑层彻底与 UI 耦合了，但是多少是一个解决方案，后面单独抽出指令，把权限表在指令中设计，用 <code>display</code> 来做控制，从而做到单个按钮的原子级组件控制。</p><blockquote><p>这个其实是目前市面上看到过特别多的解决思路，我当初并没有查到，甚至当我开发的时候，都没有搞明白这个专有名词是个啥，因为之前太忙于做项目，以及蒙头书中，所以对于前端的一些解决方案并不知道其他人如何解决的，基本都是自己思路想到了，最后运用的七七八八，才知道这个解决方案，人家已经在用了，我面试的时候也是这样说的，因为这个简历毕竟是之前的，而且我认为这玩意确实是当时我独立思考的成果，所以还是能说出来的，而且在设置权限表的时候就像是去设计一款协议一样，也并不是很简单。</p></blockquote></li><li><p>。。。然后又是一些项目上的问题</p></li><li><p>面试官：我们来简单问两个技术问题，<code>js</code> 的事件循环知道么，以及宏任务，和微任务。</p></li><li><p>我：所谓的宏任务，微任务是一个因为多线程带来的问题，就好比时间片轮转一样，在操作系统中有众多进程，进程之间通过回调来做消息通知，我们知道浏览器的 JS 是单线程，但是绝不会有谁说加上 timer 计时器也仍然是单线程，以及 UI/Render 的线程，他们是分割开的，DOM 的解析和 JS 是一起的，但是 CSSOM 的又是另外一个，所以就出现了， RequestAnimateFrame ，RequestIdleCallback 这种东西，以及 setTimeout，setInterval，处于不同线程的任务，对于每一个线程的回调执行，便对微任务队列进行一次批量回调，也就是一个圈的模型，这也解释了为什么 setTimeout 相比于 ReqeustAnimateFrame 出现极小的一个时间差不平衡，一般来讲起码有 0.4ms 的误差，如果遇到更难执行的任务，卡在 js 线程，那么等待的时间就更久，而这也是为什么微任务引入的原因，避免同步任务卡太久，导致渲染不给力。</p><blockquote><p>我当时一下就高兴起来，毕竟我自从把事件循环所谓的宏任务，微任务以及操作系统的进程线程模型联系起来之后，感觉打通了任督二脉之后，就没人怎么问我这个东西了，非常怀恋，RequestAnimateFrame 并不是当时答出来，只是做在这里，现在作为总结，连贯一些。</p></blockquote></li><li><p>面试官：那让你实现一个倒计时，你有什么思路？</p></li><li><p>我：闭包，采用闭包缓存一个 <code>count </code>，然后采用 setTimeout ，或者 setInterval 实现，但是 setInterval 的 timer 容易丢失，而且处于休眠过程中，或者其他页面的时候，就会停止还是说会继续来着（说实话我当时也说不清，现在也有点描述不出来）。</p></li><li><p>面试官：还有没有其他方案呢？</p></li><li><p>我：（突然绷不住了，确实大概就这两个方案，我实在想不出来），不好意思，确实想不到其他方案，可以给个提示么。</p></li><li><p>面试官：有了解过 RequestAnimateFrame 么</p></li><li><p>我：了是了解过，这个可以使得动画边得平滑，不过还是没啥大思路，只知道，大概它的时间间隔和屏幕的 fps 有关，（说实话，我估计是当时理解了他想表达的含义了，应该想说的是展示时钟，那种，这样在刷新屏幕的时候更新值就可以了，这样会更加平滑，准确）</p></li><li><p>面试官：再问一个问题，我看你对 Vue 用的多一些，你可以讲讲 Vue 的实现以及优势么。</p></li><li><p>我：（Vue 双向绑定 ，以及与 Vue 3 的一个对比，以及之前对源码的一些理解，以及其中对 Object.defineProperty 和 Proxy 的关系，以及从作为一个语义开发者对这两个 API 的一个理解）+ （VNode，讲到这玩意的时候很多东西都忘了）+ Diff 算法。</p></li><li><p>面试官：可以讲讲 Vnode 的作用么？</p></li><li><p>我：提升性能，组件化，做 Diff。</p></li><li><p>面试官：还有没有呢？</p></li><li><p>我：。。。（当时确实没想出来）</p></li><li><p>面试官：SSR 了解过么，SSR 是如何生成 HTML5 的？</p></li><li><p>我：（吧啦了这个我之前遇到过，服务端渲染，讲了一下他的实现效果和 SEO 上的作用，不过还是联系不上 Vnode）</p></li><li><p>面试官：Vue 组件化为什么不用 HTML5 的 component?</p></li><li><p>我：兼容性吧？然后讲了一下兼容性的问题。我好像对 Vnode 的有些眉目了。</p></li><li><p>面试官：说说？</p></li><li><p>我：难道是因为兼容性问题？</p></li><li><p>面试官：缺点，不太对，要不你猜一下？</p></li><li><p>我：竟然让我猜，那我就思路飞起来了，从 SSR 角度来想，联系起来，我不由得和  ORM 对比起来，其中 ORM 就是对象关系操作模型，也就是简化 SQL 的一个东西，难道是 Vnode 生成 HTML5，跨平台，移植性？</p></li><li><p>面试官：差不多，那总结一下？</p></li><li><p>我：/。/。/（总结一下）</p></li><li><p>面试官：简单做个算法题？</p><blockquote><p>P A L E</p><p>P L E</p><p>有三种操作方式，加一个字符串，和删一个字符串，和改变一个字符串，问能不能一次操作实现两个字母边得一样。</p></blockquote></li><li><p>我：这个题很熟悉（当时和 leetcode 那个题记错了，也不是背题，只是一眼晃过来，就忽略了，只要一次操作这个边界就开始想着动态规划去做，几个实现，然后写了半天，思路错了，面试官提醒，然后发现条件限制，然后就突然卡住了，这个题就一下子 A 不出来了，。。。面试官耐心的说，可以分成情况讨论，什么情况是不可能成功的，- 提示部分就不继续说了，然后总之当时没写出来，不过大概思路是双指针了，我还往 KMP 方向思考了，回头再看确实是想复杂了，直接双指针，合并一下，然后两个指针位置只差大于 2 就跳出就是，面试完之后，干饭的时候想起来，心中五味杂陈，主要是这个题不难，自己想复杂了）</p><blockquote><p>其中有部分面试时候问的内容，回忆不太起来了</p></blockquote></li></ul><h3 id="反问环节"><a class="markdownIt-Anchor" href="#反问环节"></a> 反问环节</h3><ul><li><p>关于学习建议。（在面试的时候，我基本都会问一下这个问题，因为这样可能给我未来有更大的帮助，至少学习方法不能错）</p></li><li><p>面试官：看得出来，你对底层源码很熟悉，有比较丰富的经验，也有很好的学习习惯，但是对于这些框架的参生，以及其为什么有这个，而不是另外一个已经有了的工具，换句话说就是为什么，这个能取代其他成为主流，可以从这样的宏观角度去思考，从业务层面也好，从实际出发也好，从底层原理出发也好，都需要具体了解，这个技术本身解决了什么问题，像我之前在组内和成员分享的时候，有时候甚至会涉及到某一个属性的实现，从 Webview 本身去看这个的一个原理，这些内容可以是一个学习方向，也就是说知道原理只是为了更好的运用，而不是更困难的去学习。（内容大概有删减，但是呢，也是我理解他说的一段话的含义）</p><blockquote><p>在对于新的框架学习的时候，一定要去思考他的运用场景，他解决了什么问题，它为什么能成为主流，然后它是如何解决某个问题的，以及框架本身的历史包袱，只是自然而然的一个学习过程。这对我的一个学习方法有了转变，之前只是用工具，然后听说这个工具能够解决问题，然后我去采用工具，但是对于它为什么能解决我的问题确实是一知半解的</p></blockquote></li><li><p>如果我成功通过面试之后，可能的业务线与技术栈？</p></li><li><p>。。。。</p></li></ul><h2 id="二面"><a class="markdownIt-Anchor" href="#二面"></a> 二面</h2><h3 id="自我介绍-2"><a class="markdownIt-Anchor" href="#自我介绍-2"></a> 自我介绍</h3><h3 id="讲项目"><a class="markdownIt-Anchor" href="#讲项目"></a> 讲项目</h3><h3 id="一些基本题"><a class="markdownIt-Anchor" href="#一些基本题"></a> 一些基本题</h3><p>面试官：Promise 有哪些静态方法？</p><p>我：我记得的大概有，三种状态组合，要么都完成，要么都没完成的，直接让他完成的，所有任务中完成一个就返回的，不管成不成功都要返回的（实际上，我只是想到了 race all resolve reject 还有其他的，这种 API 其实根据现实场景去寻找更加合理）</p><p>面试官：ES6 有哪些常用方法</p><p>我：我所记得的有，定义变量的（let const ），简化操作的 (解构赋值，展开运算符。。。)，异步操作的（yield generator）, 新的数据类型（Bigint Symbol），出现类的概念，更多的 String 方法。（回答的比较笼统，确实考研去了，这些新规范忘记了很多）</p><p>面试官：说一下 let const 的区别</p><p>我：（这个基本就是网上那一套，什么 const 要赋初值啊，多用 const 啊，以及和 var 再对应一下）</p><h3 id="算法题"><a class="markdownIt-Anchor" href="#算法题"></a> 算法题</h3><p>也不太能算作是算法题吧，只是一个应用题吧</p><p><img lazyload="" src="/images/loading.svg" data-src="image-20230227094915362.png" alt="image-20230227094915362"></p><p>也就是把下面的数据集合，让你实现每一次输入，然后更新这个建议集，</p><p>简单的思路直接 BF，直接 <code>Search</code>， startsWith 啥的，构造正则表达式，巴拉巴拉</p><p>然后就是可以把 goog 进行结构转变，构建一个树就行了</p><h5 id="反问"><a class="markdownIt-Anchor" href="#反问"></a> 反问</h5><p>因为是不同业务线的面试官，就顺便问了一下他所处的业务线，以及相关内容，毕竟考虑到如果去了之后，好选择业务线。</p><h2 id="三面"><a class="markdownIt-Anchor" href="#三面"></a> 三面</h2><h3 id="问项目"><a class="markdownIt-Anchor" href="#问项目"></a> 问项目</h3><h3 id="如何排查-bug"><a class="markdownIt-Anchor" href="#如何排查-bug"></a> 如何排查 Bug</h3><h3 id="算法题和思维题"><a class="markdownIt-Anchor" href="#算法题和思维题"></a> 算法题和思维题</h3><h4 id="算法题-2"><a class="markdownIt-Anchor" href="#算法题-2"></a> 算法题</h4><p>给定 n+1 个数字，然后随机放入 n 个到某一个数组，然后判断哪个数没放进去</p><blockquote><p>基本思路：遍历 n+1 次，异或一遍</p></blockquote><h4 id="思维题"><a class="markdownIt-Anchor" href="#思维题"></a> 思维题</h4><p>假定一个聊天室，只有我和你两个人，然后我说我有一个超能力，能够知道你有多少根头发，你怎样判断我是否真的有这个超能力。</p><blockquote><p>当时看的时候还觉得蛮新颖的，再加上有些紧张，一时半会想不到解决方法，差点去手写真值表，然后面试官提醒，如果服务器有一个功能，可以去输出一张图片有多少个某个颜色的像素点，怎么去验证他，不过我听完之后还是没思路，然后转念一想，我作为客户端，我只有我自己的信息，那我对于服务器也是一个黑盒状态，那么我只要保证我的随机性，然后知道我自己的信息差，然后让对面来猜就行了，也就是你先来问我一次，我报一个数，然后你偷偷去拔掉一根（可以是随机的根，只要自己知道就可以了，有一种类似私钥的感觉），你再来找我问你有多少根，然后从而就能判断出，是否真的有这个能力了。</p><p>后面研究了一下，发现这个是在区块链很火的一个东西，零知识证明，本来之前也在关注区块链，不过主要是 p2p 层和 共识机制（因为和分布式这个很有共同点，所以关注的比较多）。</p></blockquote><h2 id="hr-面"><a class="markdownIt-Anchor" href="#hr-面"></a> HR 面</h2><p>原本有 CTO 面，也就是有 四面的，但是貌似后面给我免掉了，然后我就直达 HR 面了。</p><p>可是就是三面之后，差不多出复试成绩了，没想到考的还算可以，那我肯定只有跑去准备复试了，真的很可惜，本来也不想为难 HR 的，因为这种鸽子，她们大概率会被骂，就希望 CTO 面的时候，然后给他解释一下，不过也可能是我想多了吧，自作多情了点，主要是一面 和 HR 给我的映像特别深，本来计划如果考的不太行，就进入他的那条业务线的。</p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>面试下来，面试官观察我的同时，我也会观察面试官，当然不是察言观色，而是观察我加入她们是否有意义，因为，如果是一个死气层层，只是八股文的团队，貌似可以缓解生计，但是却很没必要，可以等之后再来考虑生计问题，在满足生活的条件下，还是可以追求一下理想的🎈。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;微派前端面</summary>
      
    
    
    
    <category term="面试经历" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
    <category term="2023面试" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="interview" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/interview/"/>
    
    
    <category term="2023面试" scheme="https://couriourc.github.io/tags/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="面试经历" scheme="https://couriourc.github.io/tags/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>微派前端面试经历</title>
    <link href="https://couriourc.github.io/posts/3H28QX.html"/>
    <id>https://couriourc.github.io/posts/3H28QX.html</id>
    <published>2023-02-23T04:55:55.000Z</published>
    <updated>2023-03-18T05:10:30.652Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="微派前端面试经历"><a class="markdownIt-Anchor" href="#微派前端面试经历"></a> 微派前端面试经历</h1><blockquote><p>趁着考研初试成绩出来之前，投了很多家的春招招聘，面了一些，也拒了一些。之前都没有什么面试因为面试给我带来太多的帮助，或氛围不行，或白菜价格，而此次面试得到了很多很不一样的思考方式和提升，特此记录</p></blockquote><h2 id="一面"><a class="markdownIt-Anchor" href="#一面"></a> 一面</h2><blockquote><p>因为本来就有做任何事都提前半小时做好准备的习惯，这次也不例外，所以就提前半个小时进入了面试会议，虽然额外又多等了十五分钟，不过影响不是特别大。</p></blockquote><h3 id="自我介绍"><a class="markdownIt-Anchor" href="#自我介绍"></a> 自我介绍</h3><blockquote><p>之前一直没有一个完整体系的自我介绍，所以这次自我介绍也是说的不是很好，这两天准备给导师发简历，所以就多做了一些功课，就顺手在此处记录一下，虽然不是面试时候说出来的:</p><p>当然不是为了说走后门啥的，我只是想做研究，对于区块链十分感兴趣，恰好看到一位老师在做这一块，也十分感兴趣，但是考虑到如此火爆，再加上我只是一个材料学子，大佬看不上，所以就毛遂自荐，希望能有一席之地，就算复试出了幺蛾子，也能有继续交流的机会，就已经很满足了，毕竟对我而言，周边环境只是辅助作用，自我驱动才是我的动力源泉。</p><p>之所以对区块链的 idea ，如此感兴趣，当初也是受《黑客与画家》的影响，而之前在了解到区块链之前，我也有区块链的基本想法，然后碰到之后就自然而然就像是伯乐之音一般，我的蓝图，便是能参与其中并落地实践。</p><p>嗯，之所以在面经的时候讲一下我的学习方法，纯粹只是突然想到，然后估摸着可能对实验室的学弟学妹们有点用，故此分享。</p></blockquote><p>面试官您好，我叫陈润，现在将要面试的是微派 23 届校招，本科期间，我主修材料科学工程学院电子元器件方向，初入大一任职班长，荣获院级优秀班干部、优秀共青团，我严于律己热爱学习，荣获西华大学高等数学竞赛一等奖，成为一名光荣的共产党员。</p><p>严于律己是性格，兴趣是我的灵魂。</p><p>我热爱计算机技术，以梦为马，当以浆行舟。为具备相应的能力，我去图书馆借阅书籍；到计算机学院课程上旁听；在慕课进行学习。有计划，有目标的提升自己的能力，得益于此，在大一下时，通过层层面试选拔，我加入到计算机学院本科实验室（微力创新互动科技实验室，该实验室自主研发了 “西瓜课表” 等多项项目提供全校师生使用）。</p><p>实验室中，我主攻 Web 应用开发方向，学习基础知识，积极与学长老师交流，弥补不足。学长毕业后，我很荣幸得到实验室老师以及成员们的认可，成为实验室管理员之一，组织每周组会、协助新成员研发学习，实验室在 AI、Web、Unity  方向均斩获诸多奖项，本人也积极参与 “互联网 +”，“计算机能力挑战赛”，“蓝桥杯” 等竞赛并获多项奖项。</p><p>毫无疑问，实验室为我综合能力上带来质的飞跃，于是我在大二下的暑假获得了第一份实习 offer，后因疫情原因提前结束，又入实验室师兄创业团队进行研发，入冬寒假，接到腾讯 IEG 蓝鲸智云校企项目合作开发邀请，参与开源奖项管理系统的开发，并以极高评价结题。</p><p>实际面试和上面有些许出入，面试基本挑的是关于我的学习方式，以及实习经历用到的技术栈和解决的问题来介绍我自己。</p><h3 id="正文"><a class="markdownIt-Anchor" href="#正文"></a> 正文</h3><ul><li><p>面试官：看你简历上写做个小程序的优化，可以讲讲小程序的优化么？</p></li><li><p>我：在该小程序中，我分为了两个优化点。分为延时加载，和差异比对，减少 <code>setData</code> 的批量使用，以及对于虚拟列表的优化实现，首先对于第一个，因为实时效果要求比较严格，而频繁的轮询会导致反复的数据赋值（算是我自己开发时候的疏漏吧）。然后是厂列表，分了两个部分角度优化，分批次 <code>setData</code>, 以及虚拟滚动（这个是之后开发时候的想到的，虽然没有实际用上去）。</p></li><li><p>面试官：差异比对，给你一个复杂对象，怎么去做呢。</p></li><li><p>我：Diff 算法的话太奢侈了，我可能会选择给他转成 JSON，比对一下就是，或者找一个 NodeID , 这种给他绑定，而不是每一个都判断</p><blockquote><p>当时讲的时候，没有现在这么讲的简洁了，不过差不多想要表达这个涵义。</p></blockquote></li><li><p>面试官：你在 xxx 系统写做到了权限控制，你可以讲讲你的思路么？</p></li><li><p>我：在当初我们后端并没有写完整的某个用户能看到什么的权限表，我只有一个用户的身份信息，只知道这是不同权限的人登录，并不知道这个人具体有什么权限，我参照之前实习的时候的一个解决方案，自己维护了一张权限表在本地，然后用 <code>v-if</code> 这些指令结合 <code>vuex</code>,<code>getter</code>, 并将 <code>getter</code> 封装成函数，然后呢，再做校验（这样做其实问题很大，逻辑层彻底与 UI 耦合了，但是多少是一个解决方案，后面单独抽出指令，把权限表在指令中设计，用 <code>display</code> 来做控制，从而做到单个按钮的原子级组件控制。</p><blockquote><p>这个其实是目前市面上看到过特别多的解决思路，我当初并没有查到，甚至当我开发的时候，都没有搞明白这个专有名词是个啥，因为之前太忙于做项目，以及蒙头书中，所以对于前端的一些解决方案并不知道其他人如何解决的，基本都是自己思路想到了，最后运用的七七八八，才知道这个解决方案，人家已经在用了，我面试的时候也是这样说的，因为这个简历毕竟是之前的，而且我认为这玩意确实是当时我独立思考的成果，所以还是能说出来的，而且在设置权限表的时候就像是去设计一款协议一样，也并不是很简单。</p></blockquote></li><li><p>。。。然后又是一些项目上的问题</p></li><li><p>面试官：我们来简单问两个技术问题，<code>js</code> 的事件循环知道么，以及宏任务，和微任务。</p></li><li><p>我：所谓的宏任务，微任务是一个因为多线程带来的问题，就好比时间片轮转一样，在操作系统中有众多进程，进程之间通过回调来做消息通知，我们知道浏览器的 JS 是单线程，但是绝不会有谁说加上 timer 计时器也仍然是单线程，以及 UI/Render 的线程，他们是分割开的，DOM 的解析和 JS 是一起的，但是 CSSOM 的又是另外一个，所以就出现了， RequestAnimateFrame ，RequestIdleCallback 这种东西，以及 setTimeout，setInterval，处于不同线程的任务，对于每一个线程的回调执行，便对微任务队列进行一次批量回调，也就是一个圈的模型，这也解释了为什么 setTimeout 相比于 ReqeustAnimateFrame 出现极小的一个时间差不平衡，一般来讲起码有 0.4ms 的误差，如果遇到更难执行的任务，卡在 js 线程，那么等待的时间就更久，而这也是为什么微任务引入的原因，避免同步任务卡太久，导致渲染不给力。</p><blockquote><p>我当时一下就高兴起来，毕竟我自从把事件循环所谓的宏任务，微任务以及操作系统的进程线程模型联系起来之后，感觉打通了任督二脉之后，就没人怎么问我这个东西了，非常怀恋，RequestAnimateFrame 并不是当时答出来，只是做在这里，现在作为总结，连贯一些。</p></blockquote></li><li><p>面试官：那让你实现一个倒计时，你有什么思路？</p></li><li><p>我：闭包，采用闭包缓存一个 <code>count </code>，然后采用 setTimeout ，或者 setInterval 实现，但是 setInterval 的 timer 容易丢失，而且处于休眠过程中，或者其他页面的时候，就会停止还是说会继续来着（说实话我当时也说不清，现在也有点描述不出来）。</p></li><li><p>面试官：还有没有其他方案呢？</p></li><li><p>我：（突然绷不住了，确实大概就这两个方案，我实在想不出来），不好意思，确实想不到其他方案，可以给个提示么。</p></li><li><p>面试官：有了解过 RequestAnimateFrame 么</p></li><li><p>我：了是了解过，这个可以使得动画边得平滑，不过还是没啥大思路，只知道，大概它的时间间隔和屏幕的 fps 有关，（说实话，我估计是当时理解了他想表达的含义了，应该想说的是展示时钟，那种，这样在刷新屏幕的时候更新值就可以了，这样会更加平滑，准确）</p></li><li><p>面试官：再问一个问题，我看你对 Vue 用的多一些，你可以讲讲 Vue 的实现以及优势么。</p></li><li><p>我：（Vue 双向绑定 ，以及与 Vue 3 的一个对比，以及之前对源码的一些理解，以及其中对 Object.defineProperty 和 Proxy 的关系，以及从作为一个语义开发者对这两个 API 的一个理解）+ （VNode，讲到这玩意的时候很多东西都忘了）+ Diff 算法。</p></li><li><p>面试官：可以讲讲 Vnode 的作用么？</p></li><li><p>我：提升性能，组件化，做 Diff。</p></li><li><p>面试官：还有没有呢？</p></li><li><p>我：。。。（当时确实没想出来）</p></li><li><p>面试官：SSR 了解过么，SSR 是如何生成 HTML5 的？</p></li><li><p>我：（吧啦了这个我之前遇到过，服务端渲染，讲了一下他的实现效果和 SEO 上的作用，不过还是联系不上 Vnode）</p></li><li><p>面试官：Vue 组件化为什么不用 HTML5 的 component?</p></li><li><p>我：兼容性吧？然后讲了一下兼容性的问题。我好像对 Vnode 的有些眉目了。</p></li><li><p>面试官：说说？</p></li><li><p>我：难道是因为兼容性问题？</p></li><li><p>面试官：缺点，不太对，要不你猜一下？</p></li><li><p>我：竟然让我猜，那我就思路飞起来了，从 SSR 角度来想，联系起来，我不由得和  ORM 对比起来，其中 ORM 就是对象关系操作模型，也就是简化 SQL 的一个东西，难道是 Vnode 生成 HTML5，跨平台，移植性？</p></li><li><p>面试官：差不多，那总结一下？</p></li><li><p>我：/。/。/（总结一下）</p></li><li><p>面试官：简单做个算法题？</p><blockquote><p>P A L E</p><p>P L E</p><p>有三种操作方式，加一个字符串，和删一个字符串，和改变一个字符串，问能不能一次操作实现两个字母边得一样。</p></blockquote></li><li><p>我：这个题很熟悉（当时和 leetcode 那个题记错了，也不是背题，只是一眼晃过来，就忽略了，只要一次操作这个边界就开始想着动态规划去做，几个实现，然后写了半天，思路错了，面试官提醒，然后发现条件限制，然后就突然卡住了，这个题就一下子 A 不出来了，。。。面试官耐心的说，可以分成情况讨论，什么情况是不可能成功的，- 提示部分就不继续说了，然后总之当时没写出来，不过大概思路是双指针了，我还往 KMP 方向思考了，回头再看确实是想复杂了，直接双指针，合并一下，然后两个指针位置只差大于 2 就跳出就是，面试完之后，干饭的时候想起来，心中五味杂陈，主要是这个题不难，自己想复杂了）</p><blockquote><p>其中有部分面试时候问的内容，回忆不太起来了</p></blockquote></li></ul><h3 id="反问环节"><a class="markdownIt-Anchor" href="#反问环节"></a> 反问环节</h3><ul><li><p>关于学习建议。（在面试的时候，我基本都会问一下这个问题，因为这样可能给我未来有更大的帮助，至少学习方法不能错）</p></li><li><p>面试官：看得出来，你对底层源码很熟悉，有比较丰富的经验，也有很好的学习习惯，但是对于这些框架的参生，以及其为什么有这个，而不是另外一个已经有了的工具，换句话说就是为什么，这个能取代其他成为主流，可以从这样的宏观角度去思考，从业务层面也好，从实际出发也好，从底层原理出发也好，都需要具体了解，这个技术本身解决了什么问题，像我之前在组内和成员分享的时候，有时候甚至会涉及到某一个属性的实现，从 Webview 本身去看这个的一个原理，这些内容可以是一个学习方向，也就是说知道原理只是为了更好的运用，而不是更困难的去学习。（内容大概有删减，但是呢，也是我理解他说的一段话的含义）</p><blockquote><p>在对于新的框架学习的时候，一定要去思考他的运用场景，他解决了什么问题，它为什么能成为主流，然后它是如何解决某个问题的，以及框架本身的历史包袱，只是自然而然的一个学习过程。这对我的一个学习方法有了转变，之前只是用工具，然后听说这个工具能够解决问题，然后我去采用工具，但是对于它为什么能解决我的问题确实是一知半解的</p></blockquote></li><li><p>如果我成功通过面试之后，可能的业务线与技术栈？</p></li><li><p>。。。。</p></li></ul><h2 id="二面"><a class="markdownIt-Anchor" href="#二面"></a> 二面</h2><h3 id="自我介绍-2"><a class="markdownIt-Anchor" href="#自我介绍-2"></a> 自我介绍</h3><h3 id="讲项目"><a class="markdownIt-Anchor" href="#讲项目"></a> 讲项目</h3><h3 id="一些基本题"><a class="markdownIt-Anchor" href="#一些基本题"></a> 一些基本题</h3><p>面试官：Promise 有哪些静态方法？</p><p>我：我记得的大概有，三种状态组合，要么都完成，要么都没完成的，直接让他完成的，所有任务中完成一个就返回的，不管成不成功都要返回的（实际上，我只是想到了 race all resolve reject 还有其他的，这种 API 其实根据现实场景去寻找更加合理）</p><p>面试官：ES6 有哪些常用方法</p><p>我：我所记得的有，定义变量的（let const ），简化操作的 (解构赋值，展开运算符。。。)，异步操作的（yield generator）, 新的数据类型（Bigint Symbol），出现类的概念，更多的 String 方法。（回答的比较笼统，确实考研去了，这些新规范忘记了很多）</p><p>面试官：说一下 let const 的区别</p><p>我：（这个基本就是网上那一套，什么 const 要赋初值啊，多用 const 啊，以及和 var 再对应一下）</p><h3 id="算法题"><a class="markdownIt-Anchor" href="#算法题"></a> 算法题</h3><p>也不太能算作是算法题吧，只是一个应用题吧</p><p><img lazyload="" src="/images/loading.svg" data-src="image-20230227094915362.png" alt="image-20230227094915362"></p><p>也就是把下面的数据集合，让你实现每一次输入，然后更新这个建议集，</p><p>简单的思路直接 BF，直接 <code>Search</code>， startsWith 啥的，构造正则表达式，巴拉巴拉</p><p>然后就是可以把 goog 进行结构转变，构建一个树就行了</p><h5 id="反问"><a class="markdownIt-Anchor" href="#反问"></a> 反问</h5><p>因为是不同业务线的面试官，就顺便问了一下他所处的业务线，以及相关内容，毕竟考虑到如果去了之后，好选择业务线。</p><h2 id="三面"><a class="markdownIt-Anchor" href="#三面"></a> 三面</h2><h3 id="问项目"><a class="markdownIt-Anchor" href="#问项目"></a> 问项目</h3><h3 id="如何排查-bug"><a class="markdownIt-Anchor" href="#如何排查-bug"></a> 如何排查 Bug</h3><h3 id="算法题和思维题"><a class="markdownIt-Anchor" href="#算法题和思维题"></a> 算法题和思维题</h3><h4 id="算法题-2"><a class="markdownIt-Anchor" href="#算法题-2"></a> 算法题</h4><p>给定 n+1 个数字，然后随机放入 n 个到某一个数组，然后判断哪个数没放进去</p><blockquote><p>基本思路：遍历 n+1 次，异或一遍</p></blockquote><h4 id="思维题"><a class="markdownIt-Anchor" href="#思维题"></a> 思维题</h4><p>假定一个聊天室，只有我和你两个人，然后我说我有一个超能力，能够知道你有多少根头发，你怎样判断我是否真的有这个超能力。</p><blockquote><p>当时看的时候还觉得蛮新颖的，再加上有些紧张，一时半会想不到解决方法，差点去手写真值表，然后面试官提醒，如果服务器有一个功能，可以去输出一张图片有多少个某个颜色的像素点，怎么去验证他，不过我听完之后还是没思路，然后转念一想，我作为客户端，我只有我自己的信息，那我对于服务器也是一个黑盒状态，那么我只要保证我的随机性，然后知道我自己的信息差，然后让对面来猜就行了，也就是你先来问我一次，我报一个数，然后你偷偷去拔掉一根（可以是随机的根，只要自己知道就可以了，有一种类似私钥的感觉），你再来找我问你有多少根，然后从而就能判断出，是否真的有这个能力了。</p><p>后面研究了一下，发现这个是在区块链很火的一个东西，零知识证明，本来之前也在关注区块链，不过主要是 p2p 层和 共识机制（因为和分布式这个很有共同点，所以关注的比较多）。</p></blockquote><h2 id="hr-面"><a class="markdownIt-Anchor" href="#hr-面"></a> HR 面</h2><p>原本有 CTO 面，也就是有 四面的，但是貌似后面给我免掉了，然后我就直达 HR 面了。</p><p>可是就是三面之后，差不多出复试成绩了，没想到考的还算可以，那我肯定只有跑去准备复试了，真的很可惜，本来也不想为难 HR 的，因为这种鸽子，她们大概率会被骂，就希望 CTO 面的时候，然后给他解释一下，不过也可能是我想多了吧，自作多情了点，主要是一面 和 HR 给我的映像特别深，本来计划如果考的不太行，就进入他的那条业务线的。</p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>面试下来，面试官观察我的同时，我也会观察面试官，当然不是察言观色，而是观察我加入她们是否有意义，因为，如果是一个死气层层，只是八股文的团队，貌似可以缓解生计，但是却很没必要，可以等之后再来考虑生计问题，在满足生活的条件下，还是可以追求一下理想的🎈。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;微派前端面</summary>
      
    
    
    
    <category term="面试经历" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
    <category term="2023面试" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="面经" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="2023面试" scheme="https://couriourc.github.io/tags/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="面试经历" scheme="https://couriourc.github.io/tags/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 —— 指令周期</title>
    <link href="https://couriourc.github.io/posts/24YB9K9.html"/>
    <id>https://couriourc.github.io/posts/24YB9K9.html</id>
    <published>2023-02-12T05:00:57.000Z</published>
    <updated>2023-02-13T04:00:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><script src="https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js@3.0/dist/svg.min.js"></script><h1 id="指令周期"><a class="markdownIt-Anchor" href="#指令周期"></a> 指令周期</h1><p>CPU 执行指令共有四个周期：取指周期 -&gt;[间指周期]-&gt; 执行周期 -&gt;[中断周期]</p><svg width="800" height="600" xmlns="http://www.w3.org/2000/svg" id="graph1"> <g>  <title>取指周期 -&gt; 执行周期的指令周期</title>  <g id="svg_31">   <rect stroke="#000" id="svg_29" height="168" width="82" y="232" x="653" fill="#fff"></rect>   <text id="svg_30" x="659" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" y="326" stroke="#000" fill="#000000">存储器</text>  </g>  <g stroke="null" id="svg_33">   <rect stroke="#000" id="svg_6" height="287.99999" width="350.00001" y="154" x="54" fill="#fff"></rect>   <rect stroke="#000" id="svg_7" height="65.57538" width="70.94595" y="177.92615" x="61.43243" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" id="svg_8" y="226.74306" x="95" stroke-width="0" fill="#000000"> PC</text>   <path stroke="#000" id="svg_9" d="m274.27027,182.35692l83.78379,0l0,63.80307l-83.78379,0l0,-63.80307z" opacity="undefined" fill="#fff"></path>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_11" y="229.74306" x="416" fill="#000000">MAR</text>   <rect stroke="#000" id="svg_12" height="40.76308" width="75" y="284.26461" x="277.64865" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_14" y="332.74306" x="425" fill="#000000">CU</text>   <rect stroke="#000" id="svg_15" height="62.91692" width="87.83784" y="353.38461" x="273.5946" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_16" y="423.74306" x="413" fill="#000000">MDR</text>   <rect stroke="#000" id="svg_17" height="57.6" width="70.94595" y="361.35999" x="62.10811" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_19" y="430.74306" x="93" fill="#000000">IR</text>  </g>  <g id="svg_37">   <line id="svg_35" y2="209" x2="275" y1="208" x1="130" stroke="#000" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_36" y="198" x="192" stroke="#000" fill="#000000">1</text>  </g>  <g stroke="null" id="svg_40">   <line stroke="#000" id="svg_38" y2="213" x2="473" y1="212" x1="360" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" id="svg_45" y="195" x="408" stroke-width="0" stroke="#000" fill="#000000">2</text>  </g>  <text xml:space="preserve" text-anchor="start" font-family="'Dancing Script'" font-size="24" stroke-width="0" id="svg_42" y="60" x="382" stroke="#000" fill="#000000"> 地址总线</text>  <text xml:space="preserve" text-anchor="start" font-family="'Dancing Script'" font-size="24" stroke-width="0" id="svg_43" y="60" x="489" stroke="#000" fill="#000000">数据总线</text>  <text xml:space="preserve" text-anchor="start" font-family="'Dancing Script'" font-size="24" stroke-width="0" id="svg_44" y="60" x="594" stroke="#000" fill="#000000">控制总线</text>  <g stroke="null" id="svg_48">   <line stroke="#000" id="svg_46" y2="156" x2="707.00001" y1="155" x1="476" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" id="svg_49" y="140" x="586" stroke-width="0" stroke="#000" fill="#000000"> 3</text>   <line id="svg_52" y2="231" x2="707" y1="157" x1="707" stroke="#000" fill="none"></line>  </g>  <line id="svg_56" y2="260" x2="656" y1="259" x1="608" stroke="#000" fill="none"></line>  <g id="svg_61">   <path id="svg_54" d="m353,299l254,3" opacity="undefined" stroke="#000" fill="none"></path>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_60" y="292" x="436" stroke="#000" fill="#000000">4</text>  </g>  <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_62" y="242" x="622" stroke="#000" fill="#000000">5</text>  <path id="svg_66" d="m277,307c-183,-1 -170,2 -170,2c0,0 -2,-64 -2,-64" opacity="NaN" stroke="#000" fill="none"></path>  <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_71" y="286" x="200" stroke="#000" fill="#000000">9</text>  <g id="svg_72">   <line id="svg_59" y2="382" x2="137" y1="381" x1="275" stroke="#000" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_70" y="365" x="195" stroke="#000" fill="#000000">8</text>  </g>  <g id="svg_73">   <line id="svg_64" y2="393" x2="367" y1="392" x1="531" stroke="#000" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_69" y="381" x="437" stroke="#000" fill="#000000">7</text>  </g>  <g id="svg_74">   <g id="svg_32">    <line id="svg_24" y2="520" x2="471" y1="77" x1="474" stroke="#000" fill="none"></line>    <line id="svg_27" y2="520" x2="530" y1="77" x1="533" stroke="#000" fill="none"></line>    <line id="svg_28" y2="520" x2="605" y1="77" x1="608" stroke="#000" fill="none"></line>   </g>   <line stroke="#000" id="svg_63" y2="357" x2="528.99999" y1="357" x1="655" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_68" y="343" x="571" stroke="#000" fill="#000000">6</text>  </g> </g></svg>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;script src=&quot;</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="computer-base" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/computer-base/"/>
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 —— 指令周期</title>
    <link href="https://couriourc.github.io/posts/24YB9K9.html"/>
    <id>https://couriourc.github.io/posts/24YB9K9.html</id>
    <published>2023-02-12T05:00:57.000Z</published>
    <updated>2023-02-13T04:00:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><script src="https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js@3.0/dist/svg.min.js"></script><h1 id="指令周期"><a class="markdownIt-Anchor" href="#指令周期"></a> 指令周期</h1><p>CPU 执行指令共有四个周期：取指周期 -&gt;[间指周期]-&gt; 执行周期 -&gt;[中断周期]</p><svg width="800" height="600" xmlns="http://www.w3.org/2000/svg" id="graph1"> <g>  <title>取指周期 -&gt; 执行周期的指令周期</title>  <g id="svg_31">   <rect stroke="#000" id="svg_29" height="168" width="82" y="232" x="653" fill="#fff"></rect>   <text id="svg_30" x="659" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" y="326" stroke="#000" fill="#000000">存储器</text>  </g>  <g stroke="null" id="svg_33">   <rect stroke="#000" id="svg_6" height="287.99999" width="350.00001" y="154" x="54" fill="#fff"></rect>   <rect stroke="#000" id="svg_7" height="65.57538" width="70.94595" y="177.92615" x="61.43243" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" id="svg_8" y="226.74306" x="95" stroke-width="0" fill="#000000"> PC</text>   <path stroke="#000" id="svg_9" d="m274.27027,182.35692l83.78379,0l0,63.80307l-83.78379,0l0,-63.80307z" opacity="undefined" fill="#fff"></path>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_11" y="229.74306" x="416" fill="#000000">MAR</text>   <rect stroke="#000" id="svg_12" height="40.76308" width="75" y="284.26461" x="277.64865" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_14" y="332.74306" x="425" fill="#000000">CU</text>   <rect stroke="#000" id="svg_15" height="62.91692" width="87.83784" y="353.38461" x="273.5946" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_16" y="423.74306" x="413" fill="#000000">MDR</text>   <rect stroke="#000" id="svg_17" height="57.6" width="70.94595" y="361.35999" x="62.10811" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_19" y="430.74306" x="93" fill="#000000">IR</text>  </g>  <g id="svg_37">   <line id="svg_35" y2="209" x2="275" y1="208" x1="130" stroke="#000" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_36" y="198" x="192" stroke="#000" fill="#000000">1</text>  </g>  <g stroke="null" id="svg_40">   <line stroke="#000" id="svg_38" y2="213" x2="473" y1="212" x1="360" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" id="svg_45" y="195" x="408" stroke-width="0" stroke="#000" fill="#000000">2</text>  </g>  <text xml:space="preserve" text-anchor="start" font-family="'Dancing Script'" font-size="24" stroke-width="0" id="svg_42" y="60" x="382" stroke="#000" fill="#000000"> 地址总线</text>  <text xml:space="preserve" text-anchor="start" font-family="'Dancing Script'" font-size="24" stroke-width="0" id="svg_43" y="60" x="489" stroke="#000" fill="#000000">数据总线</text>  <text xml:space="preserve" text-anchor="start" font-family="'Dancing Script'" font-size="24" stroke-width="0" id="svg_44" y="60" x="594" stroke="#000" fill="#000000">控制总线</text>  <g stroke="null" id="svg_48">   <line stroke="#000" id="svg_46" y2="156" x2="707.00001" y1="155" x1="476" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" id="svg_49" y="140" x="586" stroke-width="0" stroke="#000" fill="#000000"> 3</text>   <line id="svg_52" y2="231" x2="707" y1="157" x1="707" stroke="#000" fill="none"></line>  </g>  <line id="svg_56" y2="260" x2="656" y1="259" x1="608" stroke="#000" fill="none"></line>  <g id="svg_61">   <path id="svg_54" d="m353,299l254,3" opacity="undefined" stroke="#000" fill="none"></path>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_60" y="292" x="436" stroke="#000" fill="#000000">4</text>  </g>  <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_62" y="242" x="622" stroke="#000" fill="#000000">5</text>  <path id="svg_66" d="m277,307c-183,-1 -170,2 -170,2c0,0 -2,-64 -2,-64" opacity="NaN" stroke="#000" fill="none"></path>  <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_71" y="286" x="200" stroke="#000" fill="#000000">9</text>  <g id="svg_72">   <line id="svg_59" y2="382" x2="137" y1="381" x1="275" stroke="#000" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_70" y="365" x="195" stroke="#000" fill="#000000">8</text>  </g>  <g id="svg_73">   <line id="svg_64" y2="393" x2="367" y1="392" x1="531" stroke="#000" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_69" y="381" x="437" stroke="#000" fill="#000000">7</text>  </g>  <g id="svg_74">   <g id="svg_32">    <line id="svg_24" y2="520" x2="471" y1="77" x1="474" stroke="#000" fill="none"></line>    <line id="svg_27" y2="520" x2="530" y1="77" x1="533" stroke="#000" fill="none"></line>    <line id="svg_28" y2="520" x2="605" y1="77" x1="608" stroke="#000" fill="none"></line>   </g>   <line stroke="#000" id="svg_63" y2="357" x2="528.99999" y1="357" x1="655" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_68" y="343" x="571" stroke="#000" fill="#000000">6</text>  </g> </g></svg>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;script src=&quot;</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 —— 概述</title>
    <link href="https://couriourc.github.io/posts/1TVR2P9.html"/>
    <id>https://couriourc.github.io/posts/1TVR2P9.html</id>
    <published>2023-02-12T04:25:57.000Z</published>
    <updated>2023-02-12T04:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="原码补码反码"><a class="markdownIt-Anchor" href="#原码补码反码"></a> 原码，补码，反码</h1><p><strong>原码</strong>：将最高位作为符号位（0 表示正，1 表示负），其它数字位代表数值本身的绝对值的数字表示方式。</p><p><strong>反码</strong>：如果是正数，则表示方法和原码一样；如果是负数，符号位不变，其余各位取反，则得到这个数字的反码表示形式。</p><p><strong>补码</strong>：如果是正数，则表示方法和原码一样；如果是负数，则将数字的反码加上 1（相当于将原码数值位取反然后在最低位加 1）。</p><blockquote><p>tips: 以上的说法是对于二进制，可以知道补码的含义是</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><msup><mi>K</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = K^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> K 表示几进制，n 表示有几位</p><p>比如一位十进制的补码</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><mn>1</mn><msup><mn>0</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = 10^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></p></blockquote><h2 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h2><table><thead><tr><th>真值</th><th>原码</th><th>反码</th><th>补码</th></tr></thead><tbody><tr><td> 58</td><td>0111010</td><td>0111010</td><td>0111010</td></tr><tr><td>-58</td><td><span text-red="">1</span>111010</td><td>1<span text-red="">000101</span></td><td>10001<span text-red="">10</span></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;原码补码反</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="computer-base" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/computer-base/"/>
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 —— 原码，补码，反码</title>
    <link href="https://couriourc.github.io/posts/3J64FQ8.html"/>
    <id>https://couriourc.github.io/posts/3J64FQ8.html</id>
    <published>2023-02-12T04:25:57.000Z</published>
    <updated>2023-02-12T04:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="原码补码反码"><a class="markdownIt-Anchor" href="#原码补码反码"></a> 原码，补码，反码</h1><p><strong>原码</strong>：将最高位作为符号位（0 表示正，1 表示负），其它数字位代表数值本身的绝对值的数字表示方式。</p><p><strong>反码</strong>：如果是正数，则表示方法和原码一样；如果是负数，符号位不变，其余各位取反，则得到这个数字的反码表示形式。</p><p><strong>补码</strong>：如果是正数，则表示方法和原码一样；如果是负数，则将数字的反码加上 1（相当于将原码数值位取反然后在最低位加 1）。</p><blockquote><p>tips: 以上的说法是对于二进制，可以知道补码的含义是</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><msup><mi>K</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = K^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> K 表示几进制，n 表示有几位</p><p>比如一位十进制的补码</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><mn>1</mn><msup><mn>0</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = 10^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></p></blockquote><h2 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h2><table><thead><tr><th>真值</th><th>原码</th><th>反码</th><th>补码</th></tr></thead><tbody><tr><td> 58</td><td>0111010</td><td>0111010</td><td>0111010</td></tr><tr><td>-58</td><td><span text-red="">1</span>111010</td><td>1<span text-red="">000101</span></td><td>10001<span text-red="">10</span></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;原码补码反</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="computer-base" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/computer-base/"/>
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 —— 概述</title>
    <link href="https://couriourc.github.io/posts/1TVR2P9.html"/>
    <id>https://couriourc.github.io/posts/1TVR2P9.html</id>
    <published>2023-02-12T04:25:57.000Z</published>
    <updated>2023-02-12T04:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="原码补码反码"><a class="markdownIt-Anchor" href="#原码补码反码"></a> 原码，补码，反码</h1><p><strong>原码</strong>：将最高位作为符号位（0 表示正，1 表示负），其它数字位代表数值本身的绝对值的数字表示方式。</p><p><strong>反码</strong>：如果是正数，则表示方法和原码一样；如果是负数，符号位不变，其余各位取反，则得到这个数字的反码表示形式。</p><p><strong>补码</strong>：如果是正数，则表示方法和原码一样；如果是负数，则将数字的反码加上 1（相当于将原码数值位取反然后在最低位加 1）。</p><blockquote><p>tips: 以上的说法是对于二进制，可以知道补码的含义是</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><msup><mi>K</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = K^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> K 表示几进制，n 表示有几位</p><p>比如一位十进制的补码</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><mn>1</mn><msup><mn>0</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = 10^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></p></blockquote><h2 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h2><table><thead><tr><th>真值</th><th>原码</th><th>反码</th><th>补码</th></tr></thead><tbody><tr><td> 58</td><td>0111010</td><td>0111010</td><td>0111010</td></tr><tr><td>-58</td><td><span text-red="">1</span>111010</td><td>1<span text-red="">000101</span></td><td>10001<span text-red="">10</span></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;原码补码反</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 —— 原码，补码，反码</title>
    <link href="https://couriourc.github.io/posts/3J64FQ8.html"/>
    <id>https://couriourc.github.io/posts/3J64FQ8.html</id>
    <published>2023-02-12T04:25:57.000Z</published>
    <updated>2023-02-12T04:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="原码补码反码"><a class="markdownIt-Anchor" href="#原码补码反码"></a> 原码，补码，反码</h1><p><strong>原码</strong>：将最高位作为符号位（0 表示正，1 表示负），其它数字位代表数值本身的绝对值的数字表示方式。</p><p><strong>反码</strong>：如果是正数，则表示方法和原码一样；如果是负数，符号位不变，其余各位取反，则得到这个数字的反码表示形式。</p><p><strong>补码</strong>：如果是正数，则表示方法和原码一样；如果是负数，则将数字的反码加上 1（相当于将原码数值位取反然后在最低位加 1）。</p><blockquote><p>tips: 以上的说法是对于二进制，可以知道补码的含义是</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><msup><mi>K</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = K^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> K 表示几进制，n 表示有几位</p><p>比如一位十进制的补码</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><mn>1</mn><msup><mn>0</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = 10^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></p></blockquote><h2 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h2><table><thead><tr><th>真值</th><th>原码</th><th>反码</th><th>补码</th></tr></thead><tbody><tr><td> 58</td><td>0111010</td><td>0111010</td><td>0111010</td></tr><tr><td>-58</td><td><span text-red="">1</span>111010</td><td>1<span text-red="">000101</span></td><td>10001<span text-red="">10</span></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;原码补码反</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 —— 常用寄存器</title>
    <link href="https://couriourc.github.io/posts/2HMTDAB.html"/>
    <id>https://couriourc.github.io/posts/2HMTDAB.html</id>
    <published>2023-02-12T04:25:57.000Z</published>
    <updated>2023-02-12T04:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="常用寄存器"><a class="markdownIt-Anchor" href="#常用寄存器"></a> 常用寄存器</h1><h2 id="通用寄存器32位"><a class="markdownIt-Anchor" href="#通用寄存器32位"></a> 通用寄存器（32 位）</h2><h3 id="数据寄存器"><a class="markdownIt-Anchor" href="#数据寄存器"></a> 数据寄存器</h3><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> EAX(Accumulator)</td><td> 累加寄存器</td><td>在乘法和除法指令中被自动使用；在 Win32 中，一般用在函数的返回值中。</td></tr><tr><td>EBX(Base)</td><td> 基址寄存器</td><td> DS 段中的数据指针</td></tr><tr><td> ECX(Count)</td><td> 计数寄存器</td><td> CPU 自动使用 ECX 作为循环计数器，在字符串和循环操作中常用，在循环指令（LOOP）或串操作中，ECX 用来进行循环计数，每执行一次循环，ECX 都会被 CPU 自动减一</td></tr><tr><td> EDX(Data)</td><td> 数据寄存器</td><td></td></tr></tbody></table><h3 id="指针变址寄存器"><a class="markdownIt-Anchor" href="#指针变址寄存器"></a> 指针变址寄存器</h3><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> EBP(Base Pointer)</td><td> 扩展基址指针寄存器</td><td> SS 段中堆栈内数据指针。EBP 由高级语言用来引用参数和局部变量，通常称为堆栈基址指针寄存器。</td></tr><tr><td>ESP(Stack Pointer)</td><td> 堆栈指针寄存器</td><td> SS 段中堆栈指针。ESP 用来寻址堆栈上的数据，ESP 寄存器一般不参与算数运算。</td></tr><tr><td>ESI(Source Index)</td><td> 源变址寄存器</td><td>字符串操作源指针</td></tr><tr><td> EDI(Destination Index)</td><td> 目的指针寄存器</td><td>字符串操作目标指针</td></tr></tbody></table><hr><h2 id="指令指针寄存器"><a class="markdownIt-Anchor" href="#指令指针寄存器"></a> 指令指针寄存器</h2><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> EIP(Instruction Pointer)</td><td> 指令指针寄存器</td><td>保存着下一条要执行的指令的地址。程序运行时，CPU 会读取 EIP 中的一条指令的地址，传送指令到指令缓冲区后，EIP 寄存器的值自动增加，增加的大小即是读取指令的字节大小，即下一条指令的地址为当前指令的地址加上当前指令的长度。</td></tr></tbody></table><hr><h2 id="段寄存器"><a class="markdownIt-Anchor" href="#段寄存器"></a> 段寄存器</h2><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> CS(Code Segment)</td><td> 代码段</td><td></td></tr><tr><td> DS(Data Segment)</td><td> 数据段</td><td></td></tr><tr><td> SS(Stack Segment)</td><td> 堆栈段</td><td></td></tr><tr><td> ES(Extra Segment)</td><td> 附加数据段</td><td></td></tr><tr><td> FS</td><td> 附加数据段</td><td></td></tr><tr><td> GS</td><td> 附加数据段</td><td></td></tr></tbody></table><hr><h2 id="标志寄存器"><a class="markdownIt-Anchor" href="#标志寄存器"></a> 标志寄存器</h2><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> FLAGS（flags) 或 PSW</td><td> 标志寄存器</td><td>程序状态字寄存器</td></tr></tbody></table><p>标志寄存器 又分为两类：条件标志寄存器、控制标志寄存器</p><p>条件标志寄存器：</p><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> OF(OverFlow Flag)</td><td> 溢出标志位</td><td>用来反应有符号数加减法运算所得结果是否溢出。运算超出当前运算位数所能表示的范围，则称为溢出，标志位被置为 1，否则为 0。</td></tr><tr><td>SF(Sign Flag)</td><td> 符号标志位</td><td>用来反应运算结果是否为 0。运算结果为负时置为 1，否则为 0。</td></tr><tr><td>ZF(Zero Flag)</td><td> 零标志位</td><td>用来反应运算结果是否为 0。为零时置为 1，否则为 0。</td></tr><tr><td>AF(Auxilliary carry Flag)</td><td> 辅助进位标志位</td><td>在字操作址，发生低字节向高字节进位或借位时该标志位被置为 1，否则为 0。</td></tr><tr><td>PF(Parity Flag)</td><td> 奇偶标志位</td><td>用于反应结果中 “1” 的个数的奇偶性。如果 “1” 为偶数置为 1，否则为 0。</td></tr><tr><td>CF(Carry Flag)</td><td> 进位标志位</td><td>运算结果的最高位产生了一个进位或错位，则该标志位置为 1，否则为 0。</td></tr></tbody></table><h3 id="控制标志寄存器"><a class="markdownIt-Anchor" href="#控制标志寄存器"></a> 控制标志寄存器</h3><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> DF(Direction Flag)</td><td> 方向标志位</td><td>用于串操作指令中，控制地址的变化方向。当 DF 为 0 时，存储器地址自动增加；当 DF 为 1 时，存储器地址自动减少。</td></tr><tr><td>IF(Interupt Flag)</td><td> 中断标志位</td><td>用于控制外部可屏蔽中断是否可以被处理器响应。</td></tr><tr><td>TF(Trap Flag)</td><td> 陷阱标志位</td><td>用于控制处理器是否进入单步操作方式。当 TF 为 0 时，处理器在正常模式下运行；当为 1 时，处理器单步执行指令，调试器可以逐步指令进行执行就是使用了该标志位。</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;常用寄存器</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统概论 - SQL</title>
    <link href="https://couriourc.github.io/posts/1G2H57H.html"/>
    <id>https://couriourc.github.io/posts/1G2H57H.html</id>
    <published>2023-02-11T11:25:57.000Z</published>
    <updated>2023-02-11T11:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="关系数据库标准语言sql"><a class="markdownIt-Anchor" href="#关系数据库标准语言sql"></a> 关系数据库标准语言（SQL）</h1><h2 id="sql-的特点"><a class="markdownIt-Anchor" href="#sql-的特点"></a> SQL 的特点</h2><h3 id="综合统一"><a class="markdownIt-Anchor" href="#综合统一"></a> 综合统一</h3><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;SQL&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;语言构成&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;DDL(数据库定义语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;DCL(数据控制语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;DML(数据操作（管理）语言)&quot;}]}]}"></svg></div><ul><li><p>是集数据定义语言（DDL），（DML），(DCL) 于一体的非过程语言</p></li><li><p>可以独立完成数据库生命周期的全部活动</p><ul><li>定义和修改、删除关系模式，定义和删除视图，插入数据，建立数据库<ul><li>模式 -&gt;CREATE SCHEMA schema_name AUTHORIZATION  username</li><li> 视图 -&gt;</li><li> 数据库：指的是插入数据</li></ul></li><li>对数据库的数据进行查询更新</li><li>数据库重构和维护</li><li>数据库安全性、完整性控制、以及事务控制</li><li><strong>嵌入式 SQL</strong> 和<strong>动态 SQL</strong></li></ul></li><li><p>用户数据库投入运行后，可根据需要随时逐步修改模式，不影响数据库的运行</p></li><li><p>数据操作符统一</p></li></ul><h3 id="高度非过程化"><a class="markdownIt-Anchor" href="#高度非过程化"></a> 高度非过程化</h3><ul><li>非关系数据模型的数据操纵语言面向过程，必须指定存取路径，而 <strong>SQL</strong> 只需要提出<strong>做什么</strong>。</li><li>SQL 的存取路径的选择以及 SQL 的操作过程，由系统自动完成</li></ul><h3 id="面向集合的操作方式"><a class="markdownIt-Anchor" href="#面向集合的操作方式"></a> 面向集合的操作方式</h3><ul><li><p>非关系数据模型采用面向记录的操作方式，操作对象是一条数据</p></li><li><p>SQL 操作对象、查找结果可以是元组的集合，他的一次插入、删除、更新操作的对象可以是元组的集合</p></li></ul><h3 id="以同一种语法结构提供多种使用方式"><a class="markdownIt-Anchor" href="#以同一种语法结构提供多种使用方式"></a> 以同一种语法结构提供多种使用方式</h3><ul><li>SQL 是 独立的语言，能够独立用于联机交互的使用方式</li><li> SQL 又是嵌入式语言，能嵌入到高级语言中，共程序员设计使用</li></ul><h3 id="sql-语言简洁易学易用"><a class="markdownIt-Anchor" href="#sql-语言简洁易学易用"></a> SQL 语言简洁，易学易用</h3><table><thead><tr><th>SQL 功能</th><th>动词</th></tr></thead><tbody><tr><td>数据查询</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong> SELECT</strong></span></td></tr><tr><td> 数据定义 (DDL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>CREATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DROP</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>ALTER</strong></span></td></tr><tr><td> 数据管理 (DML)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>INSERT</strong></span> <span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>UPDATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DELETE</strong></span></td></tr><tr><td> 数据控制 (DCL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>GRANT</strong></span> <span rounded-lg="" bg-green="" text-white=""><strong>REVOKE</strong></span></td></tr></tbody></table><h3 id="sql-的基本概念"><a class="markdownIt-Anchor" href="#sql-的基本概念"></a> SQL 的基本概念</h3><p>基本表：</p><ul><li>本身独立存在的表</li><li> SQL 中一个关系就对应一个基本表</li><li>一个（或多个）基本表对应一个存储文件</li><li>一个表可以带若干索引</li></ul><p>存储文件</p><ul><li>逻辑结构构成了关系数据库的内模式</li><li>物理结构对用户是隐藏的</li></ul><p>视图</p><ul><li>从一个或几个基本表到处的表</li><li>数据库中只存放视图的定义而不存放视图对应的数据</li><li>视图是一个虚表</li><li>用户可以再视图上再定义视图</li></ul><h2 id="32-学生-课程-数据库"><a class="markdownIt-Anchor" href="#32-学生-课程-数据库"></a> 3.2 学生 - 课程 数据库</h2><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215121643500.png" alt="image-20230215121643500"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>S-T<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_dept'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>      <span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_pno'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ccredit<span class="token punctuation">`</span></span> <span class="token keyword">FLOAT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span>     <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span>  <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Sno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Cno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215123735800.png" alt="image-20230215123735800"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token string">'李勇'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'刘晨'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'王敏'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'MA'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'张立'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'IS'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133708074.png" alt="image-20230215133708074"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215131918332.png" alt="image-20230215131918332"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Credit<span class="token punctuation">`</span></span> <span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'数据库'</span><span class="token punctuation">,</span><span class="token string">'5'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">''</span> <span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'信息系统'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'操作系统'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据结构'</span><span class="token punctuation">,</span><span class="token string">'7'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据处理'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'PASCAL语言'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133652902.png" alt="image-20230215133652902"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133005148.png" alt="image-20230215133005148"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133720872.png" alt="image-20230215133720872"></p><hr><h2 id="数据定义"><a class="markdownIt-Anchor" href="#数据定义"></a> 数据定义</h2><h3 id="sql-数据定义功能"><a class="markdownIt-Anchor" href="#sql-数据定义功能"></a> SQL 数据定义功能</h3><ul><li><p>视图和索引定义</p></li><li><p>模式</p></li><li><p>表定义</p><blockquote><p>tips:</p><p>模式与数据库、数据库中的表的关系：<br>1 个数据库下，可以有多个模式。</p><p>1 个模式下，可以有 0 个或多个表 。</p></blockquote></li></ul><table><thead><tr><th>操作对象</th><th>创建</th><th>删除</th><th>修改</th><th></th></tr></thead><tbody><tr><td>视图</td><td> CREATE VIEW</td><td>DROP VIEW</td><td></td><td></td></tr><tr><td> 索引</td><td> CREATE INDEX</td><td>DROP INDEX</td><td>ALTER INDEX</td><td></td></tr><tr><td> 模式</td><td> CREATE SCHEMA</td><td>DROP SCHEMA</td><td></td><td></td></tr><tr><td> 表</td><td> CREATE TABLE</td><td>DROP TABLE</td><td>ALTER TABLE</td><td></td></tr></tbody></table><h3 id="模式"><a class="markdownIt-Anchor" href="#模式"></a> 模式</h3><p>数据库（有的系统称为目录）-&gt; 模式 -&gt; 表以及视图、索引</p><p>现代关系数据库系统提供了一个层次化的对象命名机制</p><ul><li>一个关系数据库管理系统的实例中可以有多个数据库</li><li>一个数据库可以建立多个模式</li><li>一个模式下通常包括多个表、视图和索引等数据库对象</li></ul><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215140428334.png" alt="image-20230215140428334"></p><h4 id="模式的定义与删除"><a class="markdownIt-Anchor" href="#模式的定义与删除"></a> 模式的定义与删除</h4><h5 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h5><ul><li><p>定义模式实际上定义了一个命名空间。</p></li><li><p>在这个空间中可以定义该模式包含的数据库对象，例如基本表、视图、索引等。</p></li><li><p>在 CREATE SCHEMA 中可以接受 CREATE TABLE，CREATE VIEW 和 GRANT 子句。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token identifier"><span class="token punctuation">`</span>SCHEMA_A<span class="token punctuation">`</span></span> <span class="token keyword">AUTHORIZATION</span> <span class="token identifier"><span class="token punctuation">`</span>SYS_USER<span class="token punctuation">`</span></span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>TABLE_NAME<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>COLUMN_NAME<span class="token punctuation">`</span></span> <span class="token keyword">TYPE</span> <span class="token punctuation">[</span><span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>KEY_TYPE<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> DEFAULT_VALUE<span class="token punctuation">]</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    表名 表完整性约束<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h5 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">SCHEMA</span> <span class="token operator">&lt;</span>模式名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>删除模式有两种额外选项</p><ul><li><p>级联：删除模式的同时把该模式中所有的数据库对象全部删除</p></li><li><p>限制：如果该模式中定义了下属的数据库对象（如表，视图等），则拒绝该删除语句的执行</p><blockquote><p>也就是级联全部强制清空，格式化，限制就是确保为空的时候删除</p></blockquote></li></ul></li></ul><h4 id="基本表的定义-删除"><a class="markdownIt-Anchor" href="#基本表的定义-删除"></a> 基本表的定义、删除</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>表级完整性约束条件：e<span class="token punctuation">.</span>g: <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&lt;表名&gt;：索要定义的基本表的名字</p><p>&lt;列名&gt;：组成该表的各个属性</p><p>&lt;列级完整性约束条件&gt;：涉及相应属性列的完整性约束条件</p><ul><li><code>UNIQUE</code></li><li><code>PRIMARY KEY</code></li><li><code>NOT NULL</code></li><li><code>FOREIGN KEY</code></li><li><code>AUTO_INCREMENT</code></li><li><code>DEFAULT</code></li><li><code>CHECK</code></li></ul><p>&lt;表级完整性约束条件&gt;：涉及一个或多个属性列的完整性约束条件</p><ul><li>PRIMARY KEY (&lt; 列名&gt;,[&lt; 列名 &gt;] )</li><li> 如果完整性约束条件涉及到该表的多个属性列，则必须定义在表级，不然的话就可以定义在列级</li></ul><blockquote><p>也就是</p><p>PRIMARY KEY 和 PRIMARY KEY ( ) 的区别</p></blockquote><h5 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h5><ul><li><p>SQL 中的域的概念用<strong>数据类型</strong>来实现</p></li><li><p>定义表的属性时需要指明其数据类型以及长度</p></li><li><p>选用那种数据类型需要从取值范围和运算角度来思考</p><table><thead><tr><th>序号</th><th>数据类型</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td> 1</td><td><code>CHAR(n)</code>,<code>CHARACTER(n)</code></td><td>长度为 n 的定长字串</td><td></td></tr><tr><td> 2</td><td><code>VARCHAR(n)</code>,<code>CHARACTEVARYING(n)</code></td><td>最大长度为 n 的边长字串</td><td></td></tr><tr><td> 3</td><td><code>CLOB</code></td><td>字符串大对象</td><td></td></tr><tr><td> 4</td><td><code>BLOB</code></td><td>二进制大对象</td><td></td></tr><tr><td> 5</td><td><code>INT</code>，<code>INTEGER</code></td><td>长整数（4 字节）</td><td></td></tr><tr><td>6</td><td><code>BIGINT</code></td><td>大整数（8 字节）</td><td></td></tr><tr><td>7</td><td><code>SMALLINT</code></td><td>短整数（2 字节）</td><td></td></tr><tr><td>8</td><td><code>NUMERIC(p,d)</code></td><td>定点数，由 p 位数字（不包括符号位，小数点）组成，小输后面由 d 位</td><td></td></tr><tr><td> 9</td><td><code>DECIMAL(p,d),DEC(p,d)</code></td><td>同 NUMERIC</td><td></td></tr><tr><td>10</td><td><code>REAL</code></td><td>取决于机器精度的单精度浮点数</td><td></td></tr><tr><td> 11</td><td><code>DOUBLE PRECISION</code></td><td>取决于机器精度的双精度浮点数</td><td></td></tr><tr><td> 12</td><td><code>FLOAT(n)</code></td><td>可选精度的浮点数，精度至少为 n 位数字</td><td></td></tr><tr><td> 13</td><td><code>BOOLEAN</code></td><td>逻辑布尔量</td><td></td></tr><tr><td> 14</td><td><code>DATE</code></td><td>日期，YYYY-MM-DD</td><td></td></tr><tr><td>15</td><td><code>TIME</code></td><td>时间，HH:MM:SS</td><td></td></tr><tr><td>16</td><td><code>TIMESTAMP</code></td><td>时间戳类型</td><td></td></tr><tr><td> 17</td><td><code>INTERVAL</code></td><td>时间间隔类型</td><td></td></tr></tbody></table><blockquote><p>每一个基本表都属于某一个模式</p><p>一个模式包含多个基本表</p><p>定义基本表所属模式</p><ul><li><p>方法一 在表名中明显地给出模式名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Create</span> <span class="token keyword">table</span><span class="token string">"S-T"</span><span class="token punctuation">.</span>Student<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/*模式名为 S-T*/</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>Cource<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>SC<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>方法二：在创建模式语句中同时创建表</p><p>方法三：设置所属的模式</p></li></ul></blockquote></li><li><p>创建基本表（其他数据库也一样）时候，没有指定模式，系统根据搜索路径来确定对象所属的模式</p><blockquote><p>在 use database_name; 的时候选择的模式</p></blockquote></li><li><p>关系数据库管理系统会使用模式列表中第一个存在的模式作为数据库对象的模式名</p></li><li><p>若搜索路径中的模式明都不存在，系统将会报错</p></li><li><p>数据库管理员用户可以设置搜索路径，然后定义基本表</p></li></ul><h5 id="修改表"><a class="markdownIt-Anchor" href="#修改表"></a> 修改表</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="删除表"><a class="markdownIt-Anchor" href="#删除表"></a> 删除表</h4><pre class="line-numbers language-Sql" data-language="Sql"><code class="language-Sql">DROP TABLE &lt;表名&gt; [RESTRICT | CASCADE];DROP TABLE `S-T`.sc CASCADE;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>RESTRICT</code>、<code>CASCADE</code> 效果同之前删除模式一样</p></blockquote><ul><li><p>基本表定义被删除，数据被删除</p></li><li><p>表上建立的索引、视图、触发器等一般也将被删除</p><p>若表上建有视图，选择 <code>RESTRICT </code>时表不能被删除；选择 <code>CASCADE</code> 时，视图也自动删除。</p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> VIEW_STUDENT <span class="token keyword">AS</span><span class="token keyword">SELECT</span> Sno<span class="token punctuation">,</span> Sname<span class="token punctuation">,</span>Sage <span class="token keyword">From</span> Student<span class="token keyword">WHERE</span> Sdept<span class="token operator">=</span><span class="token string">'ls'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h4 id="索引表的定义-删除"><a class="markdownIt-Anchor" href="#索引表的定义-删除"></a> 索引表的定义、删除</h4><ul><li><p>建立索引的目的：加快查询速度</p></li><li><p>关系数据库管理系统中常见索引</p><ul><li>顺序文件上的索引</li><li> B+ 索引 🌮 具有动态平衡的有点</li><li>散列索引：查找速度很快</li><li>位图索引</li></ul></li></ul><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;谁可以建立索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;数据库管理员，也就是建表的主人&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;谁维护索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;关系数据库管理系统自动完成&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;谁使用索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;关系管理系统自动选择合适的索引作为存取路径，用户不必也不能显示的选择索引&quot;}]}]}"></svg></div><h5 id="建立索引"><a class="markdownIt-Anchor" href="#建立索引"></a> 建立索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token keyword">UNIQUE</span><span class="token operator">|</span>CLUSTER<span class="token punctuation">]</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>次序<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">CREATE</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> Stusno <span class="token keyword">ON</span> Student<span class="token punctuation">(</span>Sno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>个人理解，INDEX 的使用场景应该是在静态的表中，也就是内部数据的使用，比如我要放一个百科手册在里面，对这个手册我在之后并不会改他，或者说我在很久远之后，而且是作为管理员的我，来修改，这个时候建立索引性价比就比较高。</p><p>索引是属于表的，所以不存在修改索引到哪个表啥的。</p></blockquote><h5 id="修改索引"><a class="markdownIt-Anchor" href="#修改索引"></a> 修改索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>旧索引名<span class="token operator">&gt;</span> <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> <span class="token operator">&lt;</span>新索引<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> Stusno  <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> Stuid<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="删除索引"><a class="markdownIt-Anchor" href="#删除索引"></a> 删除索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="阶段总结"><a class="markdownIt-Anchor" href="#阶段总结"></a> 阶段总结</h3><blockquote><p>阶段总结：以上都是 DML 相关的语句</p><p>对于表进行创建，删除</p><p>他主要有一下几个方面:</p><ul><li><p>模式</p><ul><li><pre class="highlight"><code class="sql"><span class="hljs-keyword">CREATE</span> SCHEMA <span class="hljs-operator">&lt;</span>模式名<span class="hljs-operator">&gt;</span> [<span class="hljs-keyword">AUTHORIZATION</span> <span class="hljs-operator">&lt;</span>USER_NAME<span class="hljs-operator">&gt;</span>]; <span class="hljs-operator">&lt;</span><span class="hljs-operator">!</span><span class="hljs-comment">--code￼14--&gt;</span></code></pre></li></ul></li><li><p>基本表</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改</p></li></ul></li></ul></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>视图</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token keyword">AS</span><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>索引</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;关系数据库</summary>
      
    
    
    
    <category term="语言基础" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="database-system" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/database-system/"/>
    
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="SQL" scheme="https://couriourc.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统概论 - SQL</title>
    <link href="https://couriourc.github.io/posts/1G2H57H.html"/>
    <id>https://couriourc.github.io/posts/1G2H57H.html</id>
    <published>2023-02-11T11:25:57.000Z</published>
    <updated>2023-02-11T11:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="关系数据库标准语言sql"><a class="markdownIt-Anchor" href="#关系数据库标准语言sql"></a> 关系数据库标准语言（SQL）</h1><h2 id="sql-的特点"><a class="markdownIt-Anchor" href="#sql-的特点"></a> SQL 的特点</h2><h3 id="综合统一"><a class="markdownIt-Anchor" href="#综合统一"></a> 综合统一</h3><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;SQL&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;语言构成&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;DDL(数据库定义语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;DCL(数据控制语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;DML(数据操作（管理）语言)&quot;}]}]}"></svg></div><ul><li><p>是集数据定义语言（DDL），（DML），(DCL) 于一体的非过程语言</p></li><li><p>可以独立完成数据库生命周期的全部活动</p><ul><li>定义和修改、删除关系模式，定义和删除视图，插入数据，建立数据库<ul><li>模式 -&gt;CREATE SCHEMA schema_name AUTHORIZATION  username</li><li> 视图 -&gt;</li><li> 数据库：指的是插入数据</li></ul></li><li>对数据库的数据进行查询更新</li><li>数据库重构和维护</li><li>数据库安全性、完整性控制、以及事务控制</li><li><strong>嵌入式 SQL</strong> 和<strong>动态 SQL</strong></li></ul></li><li><p>用户数据库投入运行后，可根据需要随时逐步修改模式，不影响数据库的运行</p></li><li><p>数据操作符统一</p></li></ul><h3 id="高度非过程化"><a class="markdownIt-Anchor" href="#高度非过程化"></a> 高度非过程化</h3><ul><li>非关系数据模型的数据操纵语言面向过程，必须指定存取路径，而 <strong>SQL</strong> 只需要提出<strong>做什么</strong>。</li><li>SQL 的存取路径的选择以及 SQL 的操作过程，由系统自动完成</li></ul><h3 id="面向集合的操作方式"><a class="markdownIt-Anchor" href="#面向集合的操作方式"></a> 面向集合的操作方式</h3><ul><li><p>非关系数据模型采用面向记录的操作方式，操作对象是一条数据</p></li><li><p>SQL 操作对象、查找结果可以是元组的集合，他的一次插入、删除、更新操作的对象可以是元组的集合</p></li></ul><h3 id="以同一种语法结构提供多种使用方式"><a class="markdownIt-Anchor" href="#以同一种语法结构提供多种使用方式"></a> 以同一种语法结构提供多种使用方式</h3><ul><li>SQL 是 独立的语言，能够独立用于联机交互的使用方式</li><li> SQL 又是嵌入式语言，能嵌入到高级语言中，共程序员设计使用</li></ul><h3 id="sql-语言简洁易学易用"><a class="markdownIt-Anchor" href="#sql-语言简洁易学易用"></a> SQL 语言简洁，易学易用</h3><table><thead><tr><th>SQL 功能</th><th>动词</th></tr></thead><tbody><tr><td>数据查询</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong> SELECT</strong></span></td></tr><tr><td> 数据定义 (DDL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>CREATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DROP</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>ALTER</strong></span></td></tr><tr><td> 数据管理 (DML)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>INSERT</strong></span> <span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>UPDATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DELETE</strong></span></td></tr><tr><td> 数据控制 (DCL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>GRANT</strong></span> <span rounded-lg="" bg-green="" text-white=""><strong>REVOKE</strong></span></td></tr></tbody></table><h3 id="sql-的基本概念"><a class="markdownIt-Anchor" href="#sql-的基本概念"></a> SQL 的基本概念</h3><p>基本表：</p><ul><li>本身独立存在的表</li><li> SQL 中一个关系就对应一个基本表</li><li>一个（或多个）基本表对应一个存储文件</li><li>一个表可以带若干索引</li></ul><p>存储文件</p><ul><li>逻辑结构构成了关系数据库的内模式</li><li>物理结构对用户是隐藏的</li></ul><p>视图</p><ul><li>从一个或几个基本表到处的表</li><li>数据库中只存放视图的定义而不存放视图对应的数据</li><li>视图是一个虚表</li><li>用户可以再视图上再定义视图</li></ul><h2 id="32-学生-课程-数据库"><a class="markdownIt-Anchor" href="#32-学生-课程-数据库"></a> 3.2 学生 - 课程 数据库</h2><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215121643500.png" alt="image-20230215121643500"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>S-T<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_dept'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>      <span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_pno'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ccredit<span class="token punctuation">`</span></span> <span class="token keyword">FLOAT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span>     <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span>  <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Sno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Cno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215123735800.png" alt="image-20230215123735800"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token string">'李勇'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'刘晨'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'王敏'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'MA'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'张立'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'IS'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133708074.png" alt="image-20230215133708074"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215131918332.png" alt="image-20230215131918332"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Credit<span class="token punctuation">`</span></span> <span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'数据库'</span><span class="token punctuation">,</span><span class="token string">'5'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">''</span> <span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'信息系统'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'操作系统'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据结构'</span><span class="token punctuation">,</span><span class="token string">'7'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据处理'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'PASCAL语言'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133652902.png" alt="image-20230215133652902"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133005148.png" alt="image-20230215133005148"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133720872.png" alt="image-20230215133720872"></p><hr><h2 id="数据定义"><a class="markdownIt-Anchor" href="#数据定义"></a> 数据定义</h2><h3 id="sql-数据定义功能"><a class="markdownIt-Anchor" href="#sql-数据定义功能"></a> SQL 数据定义功能</h3><ul><li><p>视图和索引定义</p></li><li><p>模式</p></li><li><p>表定义</p><blockquote><p>tips:</p><p>模式与数据库、数据库中的表的关系：<br>1 个数据库下，可以有多个模式。</p><p>1 个模式下，可以有 0 个或多个表 。</p></blockquote></li></ul><table><thead><tr><th>操作对象</th><th>创建</th><th>删除</th><th>修改</th><th></th></tr></thead><tbody><tr><td>视图</td><td> CREATE VIEW</td><td>DROP VIEW</td><td></td><td></td></tr><tr><td> 索引</td><td> CREATE INDEX</td><td>DROP INDEX</td><td>ALTER INDEX</td><td></td></tr><tr><td> 模式</td><td> CREATE SCHEMA</td><td>DROP SCHEMA</td><td></td><td></td></tr><tr><td> 表</td><td> CREATE TABLE</td><td>DROP TABLE</td><td>ALTER TABLE</td><td></td></tr></tbody></table><h3 id="模式"><a class="markdownIt-Anchor" href="#模式"></a> 模式</h3><p>数据库（有的系统称为目录）-&gt; 模式 -&gt; 表以及视图、索引</p><p>现代关系数据库系统提供了一个层次化的对象命名机制</p><ul><li>一个关系数据库管理系统的实例中可以有多个数据库</li><li>一个数据库可以建立多个模式</li><li>一个模式下通常包括多个表、视图和索引等数据库对象</li></ul><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215140428334.png" alt="image-20230215140428334"></p><h4 id="模式的定义与删除"><a class="markdownIt-Anchor" href="#模式的定义与删除"></a> 模式的定义与删除</h4><h5 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h5><ul><li><p>定义模式实际上定义了一个命名空间。</p></li><li><p>在这个空间中可以定义该模式包含的数据库对象，例如基本表、视图、索引等。</p></li><li><p>在 CREATE SCHEMA 中可以接受 CREATE TABLE，CREATE VIEW 和 GRANT 子句。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token identifier"><span class="token punctuation">`</span>SCHEMA_A<span class="token punctuation">`</span></span> <span class="token keyword">AUTHORIZATION</span> <span class="token identifier"><span class="token punctuation">`</span>SYS_USER<span class="token punctuation">`</span></span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>TABLE_NAME<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>COLUMN_NAME<span class="token punctuation">`</span></span> <span class="token keyword">TYPE</span> <span class="token punctuation">[</span><span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>KEY_TYPE<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> DEFAULT_VALUE<span class="token punctuation">]</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    表名 表完整性约束<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h5 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">SCHEMA</span> <span class="token operator">&lt;</span>模式名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>删除模式有两种额外选项</p><ul><li><p>级联：删除模式的同时把该模式中所有的数据库对象全部删除</p></li><li><p>限制：如果该模式中定义了下属的数据库对象（如表，视图等），则拒绝该删除语句的执行</p><blockquote><p>也就是级联全部强制清空，格式化，限制就是确保为空的时候删除</p></blockquote></li></ul></li></ul><h4 id="基本表的定义-删除"><a class="markdownIt-Anchor" href="#基本表的定义-删除"></a> 基本表的定义、删除</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>表级完整性约束条件：e<span class="token punctuation">.</span>g: <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&lt;表名&gt;：索要定义的基本表的名字</p><p>&lt;列名&gt;：组成该表的各个属性</p><p>&lt;列级完整性约束条件&gt;：涉及相应属性列的完整性约束条件</p><ul><li><code>UNIQUE</code></li><li><code>PRIMARY KEY</code></li><li><code>NOT NULL</code></li><li><code>FOREIGN KEY</code></li><li><code>AUTO_INCREMENT</code></li><li><code>DEFAULT</code></li><li><code>CHECK</code></li></ul><p>&lt;表级完整性约束条件&gt;：涉及一个或多个属性列的完整性约束条件</p><ul><li>PRIMARY KEY (&lt; 列名&gt;,[&lt; 列名 &gt;] )</li><li> 如果完整性约束条件涉及到该表的多个属性列，则必须定义在表级，不然的话就可以定义在列级</li></ul><blockquote><p>也就是</p><p>PRIMARY KEY 和 PRIMARY KEY ( ) 的区别</p></blockquote><h5 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h5><ul><li><p>SQL 中的域的概念用<strong>数据类型</strong>来实现</p></li><li><p>定义表的属性时需要指明其数据类型以及长度</p></li><li><p>选用那种数据类型需要从取值范围和运算角度来思考</p><table><thead><tr><th>序号</th><th>数据类型</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td> 1</td><td><code>CHAR(n)</code>,<code>CHARACTER(n)</code></td><td>长度为 n 的定长字串</td><td></td></tr><tr><td> 2</td><td><code>VARCHAR(n)</code>,<code>CHARACTEVARYING(n)</code></td><td>最大长度为 n 的边长字串</td><td></td></tr><tr><td> 3</td><td><code>CLOB</code></td><td>字符串大对象</td><td></td></tr><tr><td> 4</td><td><code>BLOB</code></td><td>二进制大对象</td><td></td></tr><tr><td> 5</td><td><code>INT</code>，<code>INTEGER</code></td><td>长整数（4 字节）</td><td></td></tr><tr><td>6</td><td><code>BIGINT</code></td><td>大整数（8 字节）</td><td></td></tr><tr><td>7</td><td><code>SMALLINT</code></td><td>短整数（2 字节）</td><td></td></tr><tr><td>8</td><td><code>NUMERIC(p,d)</code></td><td>定点数，由 p 位数字（不包括符号位，小数点）组成，小输后面由 d 位</td><td></td></tr><tr><td> 9</td><td><code>DECIMAL(p,d),DEC(p,d)</code></td><td>同 NUMERIC</td><td></td></tr><tr><td>10</td><td><code>REAL</code></td><td>取决于机器精度的单精度浮点数</td><td></td></tr><tr><td> 11</td><td><code>DOUBLE PRECISION</code></td><td>取决于机器精度的双精度浮点数</td><td></td></tr><tr><td> 12</td><td><code>FLOAT(n)</code></td><td>可选精度的浮点数，精度至少为 n 位数字</td><td></td></tr><tr><td> 13</td><td><code>BOOLEAN</code></td><td>逻辑布尔量</td><td></td></tr><tr><td> 14</td><td><code>DATE</code></td><td>日期，YYYY-MM-DD</td><td></td></tr><tr><td>15</td><td><code>TIME</code></td><td>时间，HH:MM:SS</td><td></td></tr><tr><td>16</td><td><code>TIMESTAMP</code></td><td>时间戳类型</td><td></td></tr><tr><td> 17</td><td><code>INTERVAL</code></td><td>时间间隔类型</td><td></td></tr></tbody></table><blockquote><p>每一个基本表都属于某一个模式</p><p>一个模式包含多个基本表</p><p>定义基本表所属模式</p><ul><li><p>方法一 在表名中明显地给出模式名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Create</span> <span class="token keyword">table</span><span class="token string">"S-T"</span><span class="token punctuation">.</span>Student<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/*模式名为 S-T*/</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>Cource<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>SC<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>方法二：在创建模式语句中同时创建表</p><p>方法三：设置所属的模式</p></li></ul></blockquote></li><li><p>创建基本表（其他数据库也一样）时候，没有指定模式，系统根据搜索路径来确定对象所属的模式</p><blockquote><p>在 use database_name; 的时候选择的模式</p></blockquote></li><li><p>关系数据库管理系统会使用模式列表中第一个存在的模式作为数据库对象的模式名</p></li><li><p>若搜索路径中的模式明都不存在，系统将会报错</p></li><li><p>数据库管理员用户可以设置搜索路径，然后定义基本表</p></li></ul><h5 id="修改表"><a class="markdownIt-Anchor" href="#修改表"></a> 修改表</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="删除表"><a class="markdownIt-Anchor" href="#删除表"></a> 删除表</h4><pre class="line-numbers language-Sql" data-language="Sql"><code class="language-Sql">DROP TABLE &lt;表名&gt; [RESTRICT | CASCADE];DROP TABLE `S-T`.sc CASCADE;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>RESTRICT</code>、<code>CASCADE</code> 效果同之前删除模式一样</p></blockquote><ul><li><p>基本表定义被删除，数据被删除</p></li><li><p>表上建立的索引、视图、触发器等一般也将被删除</p><p>若表上建有视图，选择 <code>RESTRICT </code>时表不能被删除；选择 <code>CASCADE</code> 时，视图也自动删除。</p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> VIEW_STUDENT <span class="token keyword">AS</span><span class="token keyword">SELECT</span> Sno<span class="token punctuation">,</span> Sname<span class="token punctuation">,</span>Sage <span class="token keyword">From</span> Student<span class="token keyword">WHERE</span> Sdept<span class="token operator">=</span><span class="token string">'ls'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h4 id="索引表的定义-删除"><a class="markdownIt-Anchor" href="#索引表的定义-删除"></a> 索引表的定义、删除</h4><ul><li><p>建立索引的目的：加快查询速度</p></li><li><p>关系数据库管理系统中常见索引</p><ul><li>顺序文件上的索引</li><li> B+ 索引 🌮 具有动态平衡的有点</li><li>散列索引：查找速度很快</li><li>位图索引</li></ul></li></ul><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;谁可以建立索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;数据库管理员，也就是建表的主人&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;谁维护索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;关系数据库管理系统自动完成&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;谁使用索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;关系管理系统自动选择合适的索引作为存取路径，用户不必也不能显示的选择索引&quot;}]}]}"></svg></div><h5 id="建立索引"><a class="markdownIt-Anchor" href="#建立索引"></a> 建立索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token keyword">UNIQUE</span><span class="token operator">|</span>CLUSTER<span class="token punctuation">]</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>次序<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">CREATE</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> Stusno <span class="token keyword">ON</span> Student<span class="token punctuation">(</span>Sno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>个人理解，INDEX 的使用场景应该是在静态的表中，也就是内部数据的使用，比如我要放一个百科手册在里面，对这个手册我在之后并不会改他，或者说我在很久远之后，而且是作为管理员的我，来修改，这个时候建立索引性价比就比较高。</p><p>索引是属于表的，所以不存在修改索引到哪个表啥的。</p></blockquote><h5 id="修改索引"><a class="markdownIt-Anchor" href="#修改索引"></a> 修改索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>旧索引名<span class="token operator">&gt;</span> <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> <span class="token operator">&lt;</span>新索引<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> Stusno  <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> Stuid<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="删除索引"><a class="markdownIt-Anchor" href="#删除索引"></a> 删除索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="阶段总结"><a class="markdownIt-Anchor" href="#阶段总结"></a> 阶段总结</h3><blockquote><p>阶段总结：以上都是 DML 相关的语句</p><p>对于表进行创建，删除</p><p>他主要有一下几个方面:</p><ul><li><p>模式</p><ul><li><pre class="highlight"><code class="sql"><span class="hljs-keyword">CREATE</span> SCHEMA <span class="hljs-operator">&lt;</span>模式名<span class="hljs-operator">&gt;</span> [<span class="hljs-keyword">AUTHORIZATION</span> <span class="hljs-operator">&lt;</span>USER_NAME<span class="hljs-operator">&gt;</span>]; <span class="hljs-operator">&lt;</span><span class="hljs-operator">!</span><span class="hljs-comment">--code￼14--&gt;</span></code></pre></li></ul></li><li><p>基本表</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改</p></li></ul></li></ul></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>视图</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token keyword">AS</span><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>索引</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;关系数据库</summary>
      
    
    
    
    <category term="语言基础" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="database-system" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/database-system/"/>
    
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="SQL" scheme="https://couriourc.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统概论 - SQL</title>
    <link href="https://couriourc.github.io/posts/1G2H57H.html"/>
    <id>https://couriourc.github.io/posts/1G2H57H.html</id>
    <published>2023-02-11T11:25:57.000Z</published>
    <updated>2023-02-11T11:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="关系数据库标准语言sql"><a class="markdownIt-Anchor" href="#关系数据库标准语言sql"></a> 关系数据库标准语言（SQL）</h1><h2 id="sql-的特点"><a class="markdownIt-Anchor" href="#sql-的特点"></a> SQL 的特点</h2><h3 id="综合统一"><a class="markdownIt-Anchor" href="#综合统一"></a> 综合统一</h3><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;SQL&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;语言构成&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;DDL(数据库定义语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;DCL(数据控制语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;DML(数据操作（管理）语言)&quot;}]}]}"></svg></div><ul><li><p>是集数据定义语言（DDL），（DML），(DCL) 于一体的非过程语言</p></li><li><p>可以独立完成数据库生命周期的全部活动</p><ul><li>定义和修改、删除关系模式，定义和删除视图，插入数据，建立数据库<ul><li>模式 -&gt;CREATE SCHEMA schema_name AUTHORIZATION  username</li><li> 视图 -&gt;</li><li> 数据库：指的是插入数据</li></ul></li><li>对数据库的数据进行查询更新</li><li>数据库重构和维护</li><li>数据库安全性、完整性控制、以及事务控制</li><li><strong>嵌入式 SQL</strong> 和<strong>动态 SQL</strong></li></ul></li><li><p>用户数据库投入运行后，可根据需要随时逐步修改模式，不影响数据库的运行</p></li><li><p>数据操作符统一</p></li></ul><h3 id="高度非过程化"><a class="markdownIt-Anchor" href="#高度非过程化"></a> 高度非过程化</h3><ul><li>非关系数据模型的数据操纵语言面向过程，必须指定存取路径，而 <strong>SQL</strong> 只需要提出<strong>做什么</strong>。</li><li>SQL 的存取路径的选择以及 SQL 的操作过程，由系统自动完成</li></ul><h3 id="面向集合的操作方式"><a class="markdownIt-Anchor" href="#面向集合的操作方式"></a> 面向集合的操作方式</h3><ul><li><p>非关系数据模型采用面向记录的操作方式，操作对象是一条数据</p></li><li><p>SQL 操作对象、查找结果可以是元组的集合，他的一次插入、删除、更新操作的对象可以是元组的集合</p></li></ul><h3 id="以同一种语法结构提供多种使用方式"><a class="markdownIt-Anchor" href="#以同一种语法结构提供多种使用方式"></a> 以同一种语法结构提供多种使用方式</h3><ul><li>SQL 是 独立的语言，能够独立用于联机交互的使用方式</li><li> SQL 又是嵌入式语言，能嵌入到高级语言中，共程序员设计使用</li></ul><h3 id="sql-语言简洁易学易用"><a class="markdownIt-Anchor" href="#sql-语言简洁易学易用"></a> SQL 语言简洁，易学易用</h3><table><thead><tr><th>SQL 功能</th><th>动词</th></tr></thead><tbody><tr><td>数据查询</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong> SELECT</strong></span></td></tr><tr><td> 数据定义 (DDL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>CREATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DROP</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>ALTER</strong></span></td></tr><tr><td> 数据管理 (DML)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>INSERT</strong></span> <span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>UPDATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DELETE</strong></span></td></tr><tr><td> 数据控制 (DCL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>GRANT</strong></span> <span rounded-lg="" bg-green="" text-white=""><strong>REVOKE</strong></span></td></tr></tbody></table><h3 id="sql-的基本概念"><a class="markdownIt-Anchor" href="#sql-的基本概念"></a> SQL 的基本概念</h3><p>基本表：</p><ul><li>本身独立存在的表</li><li> SQL 中一个关系就对应一个基本表</li><li>一个（或多个）基本表对应一个存储文件</li><li>一个表可以带若干索引</li></ul><p>存储文件</p><ul><li>逻辑结构构成了关系数据库的内模式</li><li>物理结构对用户是隐藏的</li></ul><p>视图</p><ul><li>从一个或几个基本表到处的表</li><li>数据库中只存放视图的定义而不存放视图对应的数据</li><li>视图是一个虚表</li><li>用户可以再视图上再定义视图</li></ul><h2 id="32-学生-课程-数据库"><a class="markdownIt-Anchor" href="#32-学生-课程-数据库"></a> 3.2 学生 - 课程 数据库</h2><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215121643500.png" alt="image-20230215121643500"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>S-T<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_dept'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>      <span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_pno'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ccredit<span class="token punctuation">`</span></span> <span class="token keyword">FLOAT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span>     <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span>  <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Sno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Cno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215123735800.png" alt="image-20230215123735800"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token string">'李勇'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'刘晨'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'王敏'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'MA'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'张立'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'IS'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133708074.png" alt="image-20230215133708074"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215131918332.png" alt="image-20230215131918332"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Credit<span class="token punctuation">`</span></span> <span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'数据库'</span><span class="token punctuation">,</span><span class="token string">'5'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">''</span> <span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'信息系统'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'操作系统'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据结构'</span><span class="token punctuation">,</span><span class="token string">'7'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据处理'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'PASCAL语言'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133652902.png" alt="image-20230215133652902"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133005148.png" alt="image-20230215133005148"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133720872.png" alt="image-20230215133720872"></p><hr><h2 id="数据定义"><a class="markdownIt-Anchor" href="#数据定义"></a> 数据定义</h2><h3 id="sql-数据定义功能"><a class="markdownIt-Anchor" href="#sql-数据定义功能"></a> SQL 数据定义功能</h3><ul><li><p>视图和索引定义</p></li><li><p>模式</p></li><li><p>表定义</p><blockquote><p>tips:</p><p>模式与数据库、数据库中的表的关系：<br>1 个数据库下，可以有多个模式。</p><p>1 个模式下，可以有 0 个或多个表 。</p></blockquote></li></ul><table><thead><tr><th>操作对象</th><th>创建</th><th>删除</th><th>修改</th><th></th></tr></thead><tbody><tr><td>视图</td><td> CREATE VIEW</td><td>DROP VIEW</td><td></td><td></td></tr><tr><td> 索引</td><td> CREATE INDEX</td><td>DROP INDEX</td><td>ALTER INDEX</td><td></td></tr><tr><td> 模式</td><td> CREATE SCHEMA</td><td>DROP SCHEMA</td><td></td><td></td></tr><tr><td> 表</td><td> CREATE TABLE</td><td>DROP TABLE</td><td>ALTER TABLE</td><td></td></tr></tbody></table><h3 id="模式"><a class="markdownIt-Anchor" href="#模式"></a> 模式</h3><p>数据库（有的系统称为目录）-&gt; 模式 -&gt; 表以及视图、索引</p><p>现代关系数据库系统提供了一个层次化的对象命名机制</p><ul><li>一个关系数据库管理系统的实例中可以有多个数据库</li><li>一个数据库可以建立多个模式</li><li>一个模式下通常包括多个表、视图和索引等数据库对象</li></ul><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215140428334.png" alt="image-20230215140428334"></p><h4 id="模式的定义与删除"><a class="markdownIt-Anchor" href="#模式的定义与删除"></a> 模式的定义与删除</h4><h5 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h5><ul><li><p>定义模式实际上定义了一个命名空间。</p></li><li><p>在这个空间中可以定义该模式包含的数据库对象，例如基本表、视图、索引等。</p></li><li><p>在 CREATE SCHEMA 中可以接受 CREATE TABLE，CREATE VIEW 和 GRANT 子句。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token identifier"><span class="token punctuation">`</span>SCHEMA_A<span class="token punctuation">`</span></span> <span class="token keyword">AUTHORIZATION</span> <span class="token identifier"><span class="token punctuation">`</span>SYS_USER<span class="token punctuation">`</span></span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>TABLE_NAME<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>COLUMN_NAME<span class="token punctuation">`</span></span> <span class="token keyword">TYPE</span> <span class="token punctuation">[</span><span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>KEY_TYPE<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> DEFAULT_VALUE<span class="token punctuation">]</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    表名 表完整性约束<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h5 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">SCHEMA</span> <span class="token operator">&lt;</span>模式名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>删除模式有两种额外选项</p><ul><li><p>级联：删除模式的同时把该模式中所有的数据库对象全部删除</p></li><li><p>限制：如果该模式中定义了下属的数据库对象（如表，视图等），则拒绝该删除语句的执行</p><blockquote><p>也就是级联全部强制清空，格式化，限制就是确保为空的时候删除</p></blockquote></li></ul></li></ul><h4 id="基本表的定义-删除"><a class="markdownIt-Anchor" href="#基本表的定义-删除"></a> 基本表的定义、删除</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>表级完整性约束条件：e<span class="token punctuation">.</span>g: <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&lt;表名&gt;：索要定义的基本表的名字</p><p>&lt;列名&gt;：组成该表的各个属性</p><p>&lt;列级完整性约束条件&gt;：涉及相应属性列的完整性约束条件</p><ul><li><code>UNIQUE</code></li><li><code>PRIMARY KEY</code></li><li><code>NOT NULL</code></li><li><code>FOREIGN KEY</code></li><li><code>AUTO_INCREMENT</code></li><li><code>DEFAULT</code></li><li><code>CHECK</code></li></ul><p>&lt;表级完整性约束条件&gt;：涉及一个或多个属性列的完整性约束条件</p><ul><li>PRIMARY KEY (&lt; 列名&gt;,[&lt; 列名 &gt;] )</li><li> 如果完整性约束条件涉及到该表的多个属性列，则必须定义在表级，不然的话就可以定义在列级</li></ul><blockquote><p>也就是</p><p>PRIMARY KEY 和 PRIMARY KEY ( ) 的区别</p></blockquote><h5 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h5><ul><li><p>SQL 中的域的概念用<strong>数据类型</strong>来实现</p></li><li><p>定义表的属性时需要指明其数据类型以及长度</p></li><li><p>选用那种数据类型需要从取值范围和运算角度来思考</p><table><thead><tr><th>序号</th><th>数据类型</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td> 1</td><td><code>CHAR(n)</code>,<code>CHARACTER(n)</code></td><td>长度为 n 的定长字串</td><td></td></tr><tr><td> 2</td><td><code>VARCHAR(n)</code>,<code>CHARACTEVARYING(n)</code></td><td>最大长度为 n 的边长字串</td><td></td></tr><tr><td> 3</td><td><code>CLOB</code></td><td>字符串大对象</td><td></td></tr><tr><td> 4</td><td><code>BLOB</code></td><td>二进制大对象</td><td></td></tr><tr><td> 5</td><td><code>INT</code>，<code>INTEGER</code></td><td>长整数（4 字节）</td><td></td></tr><tr><td>6</td><td><code>BIGINT</code></td><td>大整数（8 字节）</td><td></td></tr><tr><td>7</td><td><code>SMALLINT</code></td><td>短整数（2 字节）</td><td></td></tr><tr><td>8</td><td><code>NUMERIC(p,d)</code></td><td>定点数，由 p 位数字（不包括符号位，小数点）组成，小输后面由 d 位</td><td></td></tr><tr><td> 9</td><td><code>DECIMAL(p,d),DEC(p,d)</code></td><td>同 NUMERIC</td><td></td></tr><tr><td>10</td><td><code>REAL</code></td><td>取决于机器精度的单精度浮点数</td><td></td></tr><tr><td> 11</td><td><code>DOUBLE PRECISION</code></td><td>取决于机器精度的双精度浮点数</td><td></td></tr><tr><td> 12</td><td><code>FLOAT(n)</code></td><td>可选精度的浮点数，精度至少为 n 位数字</td><td></td></tr><tr><td> 13</td><td><code>BOOLEAN</code></td><td>逻辑布尔量</td><td></td></tr><tr><td> 14</td><td><code>DATE</code></td><td>日期，YYYY-MM-DD</td><td></td></tr><tr><td>15</td><td><code>TIME</code></td><td>时间，HH:MM:SS</td><td></td></tr><tr><td>16</td><td><code>TIMESTAMP</code></td><td>时间戳类型</td><td></td></tr><tr><td> 17</td><td><code>INTERVAL</code></td><td>时间间隔类型</td><td></td></tr></tbody></table><blockquote><p>每一个基本表都属于某一个模式</p><p>一个模式包含多个基本表</p><p>定义基本表所属模式</p><ul><li><p>方法一 在表名中明显地给出模式名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Create</span> <span class="token keyword">table</span><span class="token string">"S-T"</span><span class="token punctuation">.</span>Student<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/*模式名为 S-T*/</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>Cource<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>SC<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>方法二：在创建模式语句中同时创建表</p><p>方法三：设置所属的模式</p></li></ul></blockquote></li><li><p>创建基本表（其他数据库也一样）时候，没有指定模式，系统根据搜索路径来确定对象所属的模式</p><blockquote><p>在 use database_name; 的时候选择的模式</p></blockquote></li><li><p>关系数据库管理系统会使用模式列表中第一个存在的模式作为数据库对象的模式名</p></li><li><p>若搜索路径中的模式明都不存在，系统将会报错</p></li><li><p>数据库管理员用户可以设置搜索路径，然后定义基本表</p></li></ul><h5 id="修改表"><a class="markdownIt-Anchor" href="#修改表"></a> 修改表</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="删除表"><a class="markdownIt-Anchor" href="#删除表"></a> 删除表</h4><pre class="line-numbers language-Sql" data-language="Sql"><code class="language-Sql">DROP TABLE &lt;表名&gt; [RESTRICT | CASCADE];DROP TABLE `S-T`.sc CASCADE;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>RESTRICT</code>、<code>CASCADE</code> 效果同之前删除模式一样</p></blockquote><ul><li><p>基本表定义被删除，数据被删除</p></li><li><p>表上建立的索引、视图、触发器等一般也将被删除</p><p>若表上建有视图，选择 <code>RESTRICT </code>时表不能被删除；选择 <code>CASCADE</code> 时，视图也自动删除。</p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> VIEW_STUDENT <span class="token keyword">AS</span><span class="token keyword">SELECT</span> Sno<span class="token punctuation">,</span> Sname<span class="token punctuation">,</span>Sage <span class="token keyword">From</span> Student<span class="token keyword">WHERE</span> Sdept<span class="token operator">=</span><span class="token string">'ls'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h4 id="索引表的定义-删除"><a class="markdownIt-Anchor" href="#索引表的定义-删除"></a> 索引表的定义、删除</h4><ul><li><p>建立索引的目的：加快查询速度</p></li><li><p>关系数据库管理系统中常见索引</p><ul><li>顺序文件上的索引</li><li> B+ 索引 🌮 具有动态平衡的有点</li><li>散列索引：查找速度很快</li><li>位图索引</li></ul></li></ul><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;谁可以建立索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;数据库管理员，也就是建表的主人&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;谁维护索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;关系数据库管理系统自动完成&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;谁使用索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;关系管理系统自动选择合适的索引作为存取路径，用户不必也不能显示的选择索引&quot;}]}]}"></svg></div><h5 id="建立索引"><a class="markdownIt-Anchor" href="#建立索引"></a> 建立索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token keyword">UNIQUE</span><span class="token operator">|</span>CLUSTER<span class="token punctuation">]</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>次序<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">CREATE</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> Stusno <span class="token keyword">ON</span> Student<span class="token punctuation">(</span>Sno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>个人理解，INDEX 的使用场景应该是在静态的表中，也就是内部数据的使用，比如我要放一个百科手册在里面，对这个手册我在之后并不会改他，或者说我在很久远之后，而且是作为管理员的我，来修改，这个时候建立索引性价比就比较高。</p><p>索引是属于表的，所以不存在修改索引到哪个表啥的。</p></blockquote><h5 id="修改索引"><a class="markdownIt-Anchor" href="#修改索引"></a> 修改索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>旧索引名<span class="token operator">&gt;</span> <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> <span class="token operator">&lt;</span>新索引<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> Stusno  <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> Stuid<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="删除索引"><a class="markdownIt-Anchor" href="#删除索引"></a> 删除索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="阶段总结"><a class="markdownIt-Anchor" href="#阶段总结"></a> 阶段总结</h3><blockquote><p>阶段总结：以上都是 DML 相关的语句</p><p>对于表进行创建，删除</p><p>他主要有一下几个方面:</p><ul><li><p>模式</p><ul><li><pre class="highlight"><code class="sql"><span class="hljs-keyword">CREATE</span> SCHEMA <span class="hljs-operator">&lt;</span>模式名<span class="hljs-operator">&gt;</span> [<span class="hljs-keyword">AUTHORIZATION</span> <span class="hljs-operator">&lt;</span>USER_NAME<span class="hljs-operator">&gt;</span>]; <span class="hljs-operator">&lt;</span><span class="hljs-operator">!</span><span class="hljs-comment">--code￼14--&gt;</span></code></pre></li></ul></li><li><p>基本表</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改</p></li></ul></li></ul></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>视图</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token keyword">AS</span><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>索引</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;关系数据库</summary>
      
    
    
    
    <category term="语言基础" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="数据库系统" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="SQL" scheme="https://couriourc.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统概论 - SQL</title>
    <link href="https://couriourc.github.io/posts/1G2H57H.html"/>
    <id>https://couriourc.github.io/posts/1G2H57H.html</id>
    <published>2023-02-11T11:25:57.000Z</published>
    <updated>2023-02-11T11:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="关系数据库标准语言sql"><a class="markdownIt-Anchor" href="#关系数据库标准语言sql"></a> 关系数据库标准语言（SQL）</h1><h2 id="sql-的特点"><a class="markdownIt-Anchor" href="#sql-的特点"></a> SQL 的特点</h2><h3 id="综合统一"><a class="markdownIt-Anchor" href="#综合统一"></a> 综合统一</h3><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;SQL&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;语言构成&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;DDL(数据库定义语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;DCL(数据控制语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;DML(数据操作（管理）语言)&quot;}]}]}"></svg></div><ul><li><p>是集数据定义语言（DDL），（DML），(DCL) 于一体的非过程语言</p></li><li><p>可以独立完成数据库生命周期的全部活动</p><ul><li>定义和修改、删除关系模式，定义和删除视图，插入数据，建立数据库<ul><li>模式 -&gt;CREATE SCHEMA schema_name AUTHORIZATION  username</li><li> 视图 -&gt;</li><li> 数据库：指的是插入数据</li></ul></li><li>对数据库的数据进行查询更新</li><li>数据库重构和维护</li><li>数据库安全性、完整性控制、以及事务控制</li><li><strong>嵌入式 SQL</strong> 和<strong>动态 SQL</strong></li></ul></li><li><p>用户数据库投入运行后，可根据需要随时逐步修改模式，不影响数据库的运行</p></li><li><p>数据操作符统一</p></li></ul><h3 id="高度非过程化"><a class="markdownIt-Anchor" href="#高度非过程化"></a> 高度非过程化</h3><ul><li>非关系数据模型的数据操纵语言面向过程，必须指定存取路径，而 <strong>SQL</strong> 只需要提出<strong>做什么</strong>。</li><li>SQL 的存取路径的选择以及 SQL 的操作过程，由系统自动完成</li></ul><h3 id="面向集合的操作方式"><a class="markdownIt-Anchor" href="#面向集合的操作方式"></a> 面向集合的操作方式</h3><ul><li><p>非关系数据模型采用面向记录的操作方式，操作对象是一条数据</p></li><li><p>SQL 操作对象、查找结果可以是元组的集合，他的一次插入、删除、更新操作的对象可以是元组的集合</p></li></ul><h3 id="以同一种语法结构提供多种使用方式"><a class="markdownIt-Anchor" href="#以同一种语法结构提供多种使用方式"></a> 以同一种语法结构提供多种使用方式</h3><ul><li>SQL 是 独立的语言，能够独立用于联机交互的使用方式</li><li> SQL 又是嵌入式语言，能嵌入到高级语言中，共程序员设计使用</li></ul><h3 id="sql-语言简洁易学易用"><a class="markdownIt-Anchor" href="#sql-语言简洁易学易用"></a> SQL 语言简洁，易学易用</h3><table><thead><tr><th>SQL 功能</th><th>动词</th></tr></thead><tbody><tr><td>数据查询</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong> SELECT</strong></span></td></tr><tr><td> 数据定义 (DDL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>CREATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DROP</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>ALTER</strong></span></td></tr><tr><td> 数据管理 (DML)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>INSERT</strong></span> <span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>UPDATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DELETE</strong></span></td></tr><tr><td> 数据控制 (DCL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>GRANT</strong></span> <span rounded-lg="" bg-green="" text-white=""><strong>REVOKE</strong></span></td></tr></tbody></table><h3 id="sql-的基本概念"><a class="markdownIt-Anchor" href="#sql-的基本概念"></a> SQL 的基本概念</h3><p>基本表：</p><ul><li>本身独立存在的表</li><li> SQL 中一个关系就对应一个基本表</li><li>一个（或多个）基本表对应一个存储文件</li><li>一个表可以带若干索引</li></ul><p>存储文件</p><ul><li>逻辑结构构成了关系数据库的内模式</li><li>物理结构对用户是隐藏的</li></ul><p>视图</p><ul><li>从一个或几个基本表到处的表</li><li>数据库中只存放视图的定义而不存放视图对应的数据</li><li>视图是一个虚表</li><li>用户可以再视图上再定义视图</li></ul><h2 id="32-学生-课程-数据库"><a class="markdownIt-Anchor" href="#32-学生-课程-数据库"></a> 3.2 学生 - 课程 数据库</h2><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215121643500.png" alt="image-20230215121643500"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>S-T<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_dept'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>      <span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_pno'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ccredit<span class="token punctuation">`</span></span> <span class="token keyword">FLOAT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span>     <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span>  <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Sno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Cno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215123735800.png" alt="image-20230215123735800"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token string">'李勇'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'刘晨'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'王敏'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'MA'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'张立'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'IS'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133708074.png" alt="image-20230215133708074"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215131918332.png" alt="image-20230215131918332"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Credit<span class="token punctuation">`</span></span> <span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'数据库'</span><span class="token punctuation">,</span><span class="token string">'5'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">''</span> <span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'信息系统'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'操作系统'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据结构'</span><span class="token punctuation">,</span><span class="token string">'7'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据处理'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'PASCAL语言'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133652902.png" alt="image-20230215133652902"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133005148.png" alt="image-20230215133005148"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133720872.png" alt="image-20230215133720872"></p><hr><h2 id="数据定义"><a class="markdownIt-Anchor" href="#数据定义"></a> 数据定义</h2><h3 id="sql-数据定义功能"><a class="markdownIt-Anchor" href="#sql-数据定义功能"></a> SQL 数据定义功能</h3><ul><li><p>视图和索引定义</p></li><li><p>模式</p></li><li><p>表定义</p><blockquote><p>tips:</p><p>模式与数据库、数据库中的表的关系：<br>1 个数据库下，可以有多个模式。</p><p>1 个模式下，可以有 0 个或多个表 。</p></blockquote></li></ul><table><thead><tr><th>操作对象</th><th>创建</th><th>删除</th><th>修改</th><th></th></tr></thead><tbody><tr><td>视图</td><td> CREATE VIEW</td><td>DROP VIEW</td><td></td><td></td></tr><tr><td> 索引</td><td> CREATE INDEX</td><td>DROP INDEX</td><td>ALTER INDEX</td><td></td></tr><tr><td> 模式</td><td> CREATE SCHEMA</td><td>DROP SCHEMA</td><td></td><td></td></tr><tr><td> 表</td><td> CREATE TABLE</td><td>DROP TABLE</td><td>ALTER TABLE</td><td></td></tr></tbody></table><h3 id="模式"><a class="markdownIt-Anchor" href="#模式"></a> 模式</h3><p>数据库（有的系统称为目录）-&gt; 模式 -&gt; 表以及视图、索引</p><p>现代关系数据库系统提供了一个层次化的对象命名机制</p><ul><li>一个关系数据库管理系统的实例中可以有多个数据库</li><li>一个数据库可以建立多个模式</li><li>一个模式下通常包括多个表、视图和索引等数据库对象</li></ul><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215140428334.png" alt="image-20230215140428334"></p><h4 id="模式的定义与删除"><a class="markdownIt-Anchor" href="#模式的定义与删除"></a> 模式的定义与删除</h4><h5 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h5><ul><li><p>定义模式实际上定义了一个命名空间。</p></li><li><p>在这个空间中可以定义该模式包含的数据库对象，例如基本表、视图、索引等。</p></li><li><p>在 CREATE SCHEMA 中可以接受 CREATE TABLE，CREATE VIEW 和 GRANT 子句。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token identifier"><span class="token punctuation">`</span>SCHEMA_A<span class="token punctuation">`</span></span> <span class="token keyword">AUTHORIZATION</span> <span class="token identifier"><span class="token punctuation">`</span>SYS_USER<span class="token punctuation">`</span></span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>TABLE_NAME<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>COLUMN_NAME<span class="token punctuation">`</span></span> <span class="token keyword">TYPE</span> <span class="token punctuation">[</span><span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>KEY_TYPE<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> DEFAULT_VALUE<span class="token punctuation">]</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    表名 表完整性约束<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h5 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">SCHEMA</span> <span class="token operator">&lt;</span>模式名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>删除模式有两种额外选项</p><ul><li><p>级联：删除模式的同时把该模式中所有的数据库对象全部删除</p></li><li><p>限制：如果该模式中定义了下属的数据库对象（如表，视图等），则拒绝该删除语句的执行</p><blockquote><p>也就是级联全部强制清空，格式化，限制就是确保为空的时候删除</p></blockquote></li></ul></li></ul><h4 id="基本表的定义-删除"><a class="markdownIt-Anchor" href="#基本表的定义-删除"></a> 基本表的定义、删除</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>表级完整性约束条件：e<span class="token punctuation">.</span>g: <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&lt;表名&gt;：索要定义的基本表的名字</p><p>&lt;列名&gt;：组成该表的各个属性</p><p>&lt;列级完整性约束条件&gt;：涉及相应属性列的完整性约束条件</p><ul><li><code>UNIQUE</code></li><li><code>PRIMARY KEY</code></li><li><code>NOT NULL</code></li><li><code>FOREIGN KEY</code></li><li><code>AUTO_INCREMENT</code></li><li><code>DEFAULT</code></li><li><code>CHECK</code></li></ul><p>&lt;表级完整性约束条件&gt;：涉及一个或多个属性列的完整性约束条件</p><ul><li>PRIMARY KEY (&lt; 列名&gt;,[&lt; 列名 &gt;] )</li><li> 如果完整性约束条件涉及到该表的多个属性列，则必须定义在表级，不然的话就可以定义在列级</li></ul><blockquote><p>也就是</p><p>PRIMARY KEY 和 PRIMARY KEY ( ) 的区别</p></blockquote><h5 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h5><ul><li><p>SQL 中的域的概念用<strong>数据类型</strong>来实现</p></li><li><p>定义表的属性时需要指明其数据类型以及长度</p></li><li><p>选用那种数据类型需要从取值范围和运算角度来思考</p><table><thead><tr><th>序号</th><th>数据类型</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td> 1</td><td><code>CHAR(n)</code>,<code>CHARACTER(n)</code></td><td>长度为 n 的定长字串</td><td></td></tr><tr><td> 2</td><td><code>VARCHAR(n)</code>,<code>CHARACTEVARYING(n)</code></td><td>最大长度为 n 的边长字串</td><td></td></tr><tr><td> 3</td><td><code>CLOB</code></td><td>字符串大对象</td><td></td></tr><tr><td> 4</td><td><code>BLOB</code></td><td>二进制大对象</td><td></td></tr><tr><td> 5</td><td><code>INT</code>，<code>INTEGER</code></td><td>长整数（4 字节）</td><td></td></tr><tr><td>6</td><td><code>BIGINT</code></td><td>大整数（8 字节）</td><td></td></tr><tr><td>7</td><td><code>SMALLINT</code></td><td>短整数（2 字节）</td><td></td></tr><tr><td>8</td><td><code>NUMERIC(p,d)</code></td><td>定点数，由 p 位数字（不包括符号位，小数点）组成，小输后面由 d 位</td><td></td></tr><tr><td> 9</td><td><code>DECIMAL(p,d),DEC(p,d)</code></td><td>同 NUMERIC</td><td></td></tr><tr><td>10</td><td><code>REAL</code></td><td>取决于机器精度的单精度浮点数</td><td></td></tr><tr><td> 11</td><td><code>DOUBLE PRECISION</code></td><td>取决于机器精度的双精度浮点数</td><td></td></tr><tr><td> 12</td><td><code>FLOAT(n)</code></td><td>可选精度的浮点数，精度至少为 n 位数字</td><td></td></tr><tr><td> 13</td><td><code>BOOLEAN</code></td><td>逻辑布尔量</td><td></td></tr><tr><td> 14</td><td><code>DATE</code></td><td>日期，YYYY-MM-DD</td><td></td></tr><tr><td>15</td><td><code>TIME</code></td><td>时间，HH:MM:SS</td><td></td></tr><tr><td>16</td><td><code>TIMESTAMP</code></td><td>时间戳类型</td><td></td></tr><tr><td> 17</td><td><code>INTERVAL</code></td><td>时间间隔类型</td><td></td></tr></tbody></table><blockquote><p>每一个基本表都属于某一个模式</p><p>一个模式包含多个基本表</p><p>定义基本表所属模式</p><ul><li><p>方法一 在表名中明显地给出模式名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Create</span> <span class="token keyword">table</span><span class="token string">"S-T"</span><span class="token punctuation">.</span>Student<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/*模式名为 S-T*/</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>Cource<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>SC<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>方法二：在创建模式语句中同时创建表</p><p>方法三：设置所属的模式</p></li></ul></blockquote></li><li><p>创建基本表（其他数据库也一样）时候，没有指定模式，系统根据搜索路径来确定对象所属的模式</p><blockquote><p>在 use database_name; 的时候选择的模式</p></blockquote></li><li><p>关系数据库管理系统会使用模式列表中第一个存在的模式作为数据库对象的模式名</p></li><li><p>若搜索路径中的模式明都不存在，系统将会报错</p></li><li><p>数据库管理员用户可以设置搜索路径，然后定义基本表</p></li></ul><h5 id="修改表"><a class="markdownIt-Anchor" href="#修改表"></a> 修改表</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="删除表"><a class="markdownIt-Anchor" href="#删除表"></a> 删除表</h4><pre class="line-numbers language-Sql" data-language="Sql"><code class="language-Sql">DROP TABLE &lt;表名&gt; [RESTRICT | CASCADE];DROP TABLE `S-T`.sc CASCADE;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>RESTRICT</code>、<code>CASCADE</code> 效果同之前删除模式一样</p></blockquote><ul><li><p>基本表定义被删除，数据被删除</p></li><li><p>表上建立的索引、视图、触发器等一般也将被删除</p><p>若表上建有视图，选择 <code>RESTRICT </code>时表不能被删除；选择 <code>CASCADE</code> 时，视图也自动删除。</p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> VIEW_STUDENT <span class="token keyword">AS</span><span class="token keyword">SELECT</span> Sno<span class="token punctuation">,</span> Sname<span class="token punctuation">,</span>Sage <span class="token keyword">From</span> Student<span class="token keyword">WHERE</span> Sdept<span class="token operator">=</span><span class="token string">'ls'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h4 id="索引表的定义-删除"><a class="markdownIt-Anchor" href="#索引表的定义-删除"></a> 索引表的定义、删除</h4><ul><li><p>建立索引的目的：加快查询速度</p></li><li><p>关系数据库管理系统中常见索引</p><ul><li>顺序文件上的索引</li><li> B+ 索引 🌮 具有动态平衡的有点</li><li>散列索引：查找速度很快</li><li>位图索引</li></ul></li></ul><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;谁可以建立索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;数据库管理员，也就是建表的主人&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;谁维护索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;关系数据库管理系统自动完成&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;谁使用索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;关系管理系统自动选择合适的索引作为存取路径，用户不必也不能显示的选择索引&quot;}]}]}"></svg></div><h5 id="建立索引"><a class="markdownIt-Anchor" href="#建立索引"></a> 建立索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token keyword">UNIQUE</span><span class="token operator">|</span>CLUSTER<span class="token punctuation">]</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>次序<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">CREATE</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> Stusno <span class="token keyword">ON</span> Student<span class="token punctuation">(</span>Sno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>个人理解，INDEX 的使用场景应该是在静态的表中，也就是内部数据的使用，比如我要放一个百科手册在里面，对这个手册我在之后并不会改他，或者说我在很久远之后，而且是作为管理员的我，来修改，这个时候建立索引性价比就比较高。</p><p>索引是属于表的，所以不存在修改索引到哪个表啥的。</p></blockquote><h5 id="修改索引"><a class="markdownIt-Anchor" href="#修改索引"></a> 修改索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>旧索引名<span class="token operator">&gt;</span> <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> <span class="token operator">&lt;</span>新索引<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> Stusno  <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> Stuid<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="删除索引"><a class="markdownIt-Anchor" href="#删除索引"></a> 删除索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="阶段总结"><a class="markdownIt-Anchor" href="#阶段总结"></a> 阶段总结</h3><blockquote><p>阶段总结：以上都是 DML 相关的语句</p><p>对于表进行创建，删除</p><p>他主要有一下几个方面:</p><ul><li><p>模式</p><ul><li><pre class="highlight"><code class="sql"><span class="hljs-keyword">CREATE</span> SCHEMA <span class="hljs-operator">&lt;</span>模式名<span class="hljs-operator">&gt;</span> [<span class="hljs-keyword">AUTHORIZATION</span> <span class="hljs-operator">&lt;</span>USER_NAME<span class="hljs-operator">&gt;</span>]; <span class="hljs-operator">&lt;</span><span class="hljs-operator">!</span><span class="hljs-comment">--code￼14--&gt;</span></code></pre></li></ul></li><li><p>基本表</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改</p></li></ul></li></ul></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>视图</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token keyword">AS</span><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>索引</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;关系数据库</summary>
      
    
    
    
    <category term="语言基础" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="数据库系统" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="SQL" scheme="https://couriourc.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统概论 - 数据依赖的公理系统</title>
    <link href="https://couriourc.github.io/posts/C0JDXW.html"/>
    <id>https://couriourc.github.io/posts/C0JDXW.html</id>
    <published>2023-01-17T11:25:57.000Z</published>
    <updated>2023-01-17T11:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="armstrong-公理系统"><a class="markdownIt-Anchor" href="#armstrong-公理系统"></a> Armstrong 公理系统</h1><p>对于满足一组函数依赖 <code>F</code> 的关系模式 <code>R&lt;U,F&gt;</code>, 其任何一个关系 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>, 若函数依赖 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="7.173ex" height="1.57ex" role="img" focusable="false" viewBox="0 -683 3170.6 694"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(1129.8,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2407.6,0)"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g></g></g></svg></mjx-container>都成立，则称 F 逻辑蕴涵。</p><p>设 <code>U</code> 为属性集总体，<code>F</code> 是 <code>U</code> 上的一组函数依赖，于是有关系模式 R&lt;U,F&gt;, 则对于 R&lt;U,F &gt; 来说，有以下推理规则：</p><ol><li><code>自反律</code>: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>⊆</mo><mi>X</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">Y\subseteq X \subseteq U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span> ，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>⊆</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\subseteq Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 为 <code>F</code> 所蕴含。</li><li><code>增广律</code>: 若 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="7.173ex" height="1.57ex" role="img" focusable="false" viewBox="0 -683 3170.6 694"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(1129.8,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2407.6,0)"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g></g></g></svg></mjx-container>为 <code>F</code> 所蕴涵，且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">Z\subseteq U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span> ，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi>Z</mi><mo>→</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">XZ\rightarrow YZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 为 <code>F</code> 所蕴涵。</li><li><code>传递律</code>: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 以及 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">Y\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 为 <code>F</code> 所蕴含，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 为 <code>F</code> 所蕴含。</li></ol><p>看着有点绕，</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;armst</summary>
      
    
    
    
    <category term="语言基础" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="database-system" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/database-system/"/>
    
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统概论 - 数据依赖的公理系统</title>
    <link href="https://couriourc.github.io/posts/C0JDXW.html"/>
    <id>https://couriourc.github.io/posts/C0JDXW.html</id>
    <published>2023-01-17T11:25:57.000Z</published>
    <updated>2023-01-17T11:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="armstrong-公理系统"><a class="markdownIt-Anchor" href="#armstrong-公理系统"></a> Armstrong 公理系统</h1><p>对于满足一组函数依赖 <code>F</code> 的关系模式 <code>R&lt;U,F&gt;</code>, 其任何一个关系 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>, 若函数依赖 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="7.173ex" height="1.57ex" role="img" focusable="false" viewBox="0 -683 3170.6 694"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(1129.8,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2407.6,0)"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g></g></g></svg></mjx-container>都成立，则称 F 逻辑蕴涵。</p><p>设 <code>U</code> 为属性集总体，<code>F</code> 是 <code>U</code> 上的一组函数依赖，于是有关系模式 R&lt;U,F&gt;, 则对于 R&lt;U,F &gt; 来说，有以下推理规则：</p><ol><li><code>自反律</code>: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>⊆</mo><mi>X</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">Y\subseteq X \subseteq U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span> ，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>⊆</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\subseteq Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 为 <code>F</code> 所蕴含。</li><li><code>增广律</code>: 若 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="7.173ex" height="1.57ex" role="img" focusable="false" viewBox="0 -683 3170.6 694"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(1129.8,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2407.6,0)"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g></g></g></svg></mjx-container>为 <code>F</code> 所蕴涵，且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">Z\subseteq U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span> ，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi>Z</mi><mo>→</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">XZ\rightarrow YZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 为 <code>F</code> 所蕴涵。</li><li><code>传递律</code>: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 以及 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">Y\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 为 <code>F</code> 所蕴含，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 为 <code>F</code> 所蕴含。</li></ol><p>看着有点绕，</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;armst</summary>
      
    
    
    
    <category term="语言基础" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="数据库系统" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
  </entry>
  
</feed>
